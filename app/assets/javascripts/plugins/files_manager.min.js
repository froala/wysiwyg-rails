/*!
 * froala_editor v3.2.0 (https://www.froala.com/wysiwyg-editor)
 * License https://froala.com/wysiwyg-editor/terms/
 * Copyright 2014-2020 Froala Labs
 */

!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? t(require("froala-editor")) : "function" == typeof define && define.amd ? define(["froala-editor"], t) : t(e.FroalaEditor) }(this, function (vt) { "use strict"; function ht(e) { return (ht = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e })(e) } vt = vt && vt.hasOwnProperty("default") ? vt["default"] : vt, Object.assign(vt.POPUP_TEMPLATES, { "filesManager.insert": "[_BUTTONS_][_UPLOAD_LAYER_][_BY_URL_LAYER_][_EMBED_LAYER_][_UPLOAD_PROGRESS_LAYER_][_PROGRESS_BAR_]", "image.edit": "[_BUTTONS_]", "image.alt": "[_BUTTONS_][_ALT_LAYER_]", "image.size": "[_BUTTONS_][_SIZE_LAYER_]" }), Object.assign(vt.DEFAULTS, { filesInsertButtons: ["imageBack", "|", "filesUpload", "filesByURL", "filesEmbed"], filesInsertButtons2: ["deleteAll", "insertAll", "cancel", "minimize"], imageEditButtons: ["imageReplace", "imageAlign", "imageCaption", "imageRemove", "imageLink", "linkOpen", "linkEdit", "linkRemove", "-", "imageDisplay", "imageStyle", "imageAlt", "imageSize"], imageAltButtons: ["imageBack", "|"], imageSizeButtons: ["imageBack", "|"], imageUpload: !0, filesManagerUploadURL: null, imageCORSProxy: "https://cors-anywhere.froala.com", imageUploadRemoteUrls: !0, imageUploadParam: "file", filesManagerUploadParams: {}, googleOptions: {}, filesManagerUploadToS3: !1, imageUploadMethod: "POST", filesManagerMaxSize: 10485760, filesManagerAllowedTypes: ["*"], imageResize: !0, imageResizeWithPercent: !1, imageRoundPercent: !1, imageDefaultWidth: 300, imageDefaultAlign: "center", imageDefaultDisplay: "block", imageSplitHTML: !1, imageStyles: { "fr-rounded": "Rounded", "fr-bordered": "Bordered", "fr-shadow": "Shadow" }, imageMove: !0, imageMultipleStyles: !0, imageTextNear: !0, imagePaste: !0, imagePasteProcess: !1, imageMinWidth: 16, imageOutputSize: !1, imageDefaultMargin: 5, imageAddNewLine: !1 }), vt.VIDEO_PROVIDERS = [{ test_regex: /^.*((youtu.be)|(youtube.com))\/((v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))?\??v?=?([^#\&\?]*).*/, url_regex: /(?:https?:\/\/)?(?:www\.)?(?:m\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=|embed\/)?([0-9a-zA-Z_\-]+)(.+)?/g, url_text: "https://www.youtube.com/embed/$1?$2", html: '<iframe width="640" height="360" src="{url}&wmode=opaque" frameborder="0" allowfullscreen></iframe>', provider: "youtube" }, { test_regex: /^.*(?:vimeo.com)\/(?:channels(\/\w+\/)?|groups\/*\/videos\/\u200b\d+\/|video\/|)(\d+)(?:$|\/|\?)/, url_regex: /(?:https?:\/\/)?(?:www\.|player\.)?vimeo.com\/(?:channels\/(?:\w+\/)?|groups\/(?:[^\/]*)\/videos\/|album\/(?:\d+)\/video\/|video\/|)(\d+)(?:[a-zA-Z0-9_\-]+)?(\/[a-zA-Z0-9_\-]+)?/i, url_text: "https://player.vimeo.com/video/$1", html: '<iframe width="640" height="360" src="{url}" frameborder="0" allowfullscreen></iframe>', provider: "vimeo" }, { test_regex: /^.+(dailymotion.com|dai.ly)\/(video|hub)?\/?([^_]+)[^#]*(#video=([^_&]+))?/, url_regex: /(?:https?:\/\/)?(?:www\.)?(?:dailymotion\.com|dai\.ly)\/(?:video|hub)?\/?(.+)/g, url_text: "https://www.dailymotion.com/embed/video/$1", html: '<iframe width="640" height="360" src="{url}" frameborder="0" allowfullscreen></iframe>', provider: "dailymotion" }, { test_regex: /^.+(screen.yahoo.com)\/[^_&]+/, url_regex: "", url_text: "", html: '<iframe width="640" height="360" src="{url}?format=embed" frameborder="0" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" allowtransparency="true"></iframe>', provider: "yahoo" }, { test_regex: /^.+(rutube.ru)\/[^_&]+/, url_regex: /(?:https?:\/\/)?(?:www\.)?(?:rutube\.ru)\/(?:video)?\/?(.+)/g, url_text: "https://rutube.ru/play/embed/$1", html: '<iframe width="640" height="360" src="{url}" frameborder="0" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true" allowtransparency="true"></iframe>', provider: "rutube" }, { test_regex: /^(?:.+)vidyard.com\/(?:watch)?\/?([^.&/]+)\/?(?:[^_.&]+)?/, url_regex: /^(?:.+)vidyard.com\/(?:watch)?\/?([^.&/]+)\/?(?:[^_.&]+)?/g, url_text: "https://play.vidyard.com/$1", html: '<iframe width="640" height="360" src="{url}" frameborder="0" allowfullscreen></iframe>', provider: "vidyard" }], vt.VIDEO_EMBED_REGEX = /^\W*((<iframe(.|\n)*>(\s|\n)*<\/iframe>)|(<embed(.|\n)*>))\W*$/i, vt.IMAGE_EMBED_REGEX = /^\W*((<img(.|\n)*>(\s|\n)*))\W*$/i, vt.PLUGINS.filesManager = function (k) { var h, o, C, l, d, f, s, n, A, c, r, _ = k.$, p = "https://i.froala.com/upload", g = !1, t = !1, b = new Map, D = new Map, u = new Map, m = new Map, S = new Map, v = new Map, y = 0, a = [], w = -1, R = [], x = 0, E = ["file", "image", "imageTUI", "video"], L = 1, M = 2, I = 3, B = 4, O = 5, T = 6, U = 10, $ = ["video/avi", "video/mpeg", "video/x-ms-wmv"], P = {}; function z() { var e = k.popups.get("filesManager.insert"), t = e.find(".fr-files-by-url-layer input"); t.val(""), e.find(".fr-files-embed-layer textarea").val("").trigger("change"), t.trigger("change") } function F(e) { var t; v.forEach(function (e, t) { Z(t) }), !function o() { var t = !0; return E.forEach(function (e) { k.opts.pluginsEnabled.indexOf(e) < 0 && (t = !1) }), t }() ? (t = k.popups.get("filesManager.insert")) || (t = function s() { var e = '<div class="fr-buttons fr-tabs">'.concat(k.button.buildList(k.opts.fileInsertButtons), "</div>"), t = "<div style= 'padding:10px'>\n    <div class = 'fr-message'><h3 style ='font-size: 16px; margin: 10px 10px;font-weight: normal;'>".concat(k.language.translate(function a() { var e = "", t = function i() { var t = []; return E.forEach(function (e) { k.opts.pluginsEnabled.indexOf(e) < 0 && t.push(e.charAt(0).toUpperCase() + e.slice(1)) }), t }(); e = t.join(", "), 1 < t.length ? e += " plugin are" : e += " plugin is"; return e }() + " not enabled. Do you want to enable?"), "</h3></div>\n    <div style='text-align:right;'>\n      <button class='fr-trim-button fr-plugins-enable'>").concat(k.language.translate("Enable"), "</button>               \n      <button class='fr-trim-button fr-plugins-cancel'>").concat(k.language.translate("Cancel"), "</button>\n    </div>"), i = { buttons: e, upload_layer: t, by_url_layer: "", embed_layer: "", upload_progress_layer: "", progress_bar: "" }, n = k.popups.create("filesManager.insert", i); return Ee(n), n }()) : (t = k.popups.get("filesManager.insert")) || (t = _e()); var i = k.$tb.find('.fr-command[data-cmd="insertFiles"]'); if (ee(), e || !t.hasClass("fr-active")) if (e || Q(), k.popups.refresh("filesManager.insert"), k.popups.setContainer("filesManager.insert", k.$tb), i.isVisible()) { var n = k.button.getPosition(i, b.size), a = n.left, r = n.top; k.popups.show("filesManager.insert", a, r, i.outerHeight()) } else k.position.forSelection(t), k.popups.show("filesManager.insert"); k.popups.setPopupDimensions(t), t.find(".fr-upload-progress") && 0 == b.size && t.find(".fr-upload-progress").addClass("fr-none") } function N() { ee() } function H() { if (l || function o() { var e; k.shared.$image_resizer ? (l = k.shared.$image_resizer, f = k.shared.$img_overlay, k.events.on("destroy", function () { _("body").first().append(l.removeClass("fr-active")) }, !0)) : (k.shared.$image_resizer = _(document.createElement("div")).attr("class", "fr-image-resizer"), l = k.shared.$image_resizer, k.events.$on(l, "mousedown", function (e) { e.stopPropagation() }, !0), k.opts.imageResize && (l.append(K("nw") + K("ne") + K("sw") + K("se")), k.shared.$img_overlay = _(document.createElement("div")).attr("class", "fr-image-overlay"), f = k.shared.$img_overlay, e = l.get(0).ownerDocument, _(e).find("body").first().append(f))); k.events.on("shared.destroy", function () { l.html("").removeData().remove(), l = null, k.opts.imageResize && (f.remove(), f = null) }, !0), k.helpers.isMobile() || k.events.$on(_(k.o_win), "resize", function () { h && !h.hasClass("fr-uploading") ? Ye(!0) : h && (H(), replace(), J(!1)) }); if (k.opts.imageResize) { e = l.get(0).ownerDocument, k.events.$on(l, k._mousedown, ".fr-handler", Y), k.events.$on(_(e), k._mousemove, V), k.events.$on(_(e.defaultView || e.parentWindow), k._mouseup, G), k.events.$on(f, "mouseleave", G); var n = 1, a = null, r = 0; k.events.on("keydown", function (e) { if (h) { var t = -1 != navigator.userAgent.indexOf("Mac OS X") ? e.metaKey : e.ctrlKey, i = e.which; (i !== a || 200 < e.timeStamp - r) && (n = 1), (i == vt.KEYCODE.EQUALS || k.browser.mozilla && i == vt.KEYCODE.FF_EQUALS) && t && !e.altKey ? n = Ue.call(this, e, 1, 1, n) : (i == vt.KEYCODE.HYPHEN || k.browser.mozilla && i == vt.KEYCODE.FF_HYPHEN) && t && !e.altKey ? n = Ue.call(this, e, 2, -1, n) : k.keys.ctrlKey(e) || i != vt.KEYCODE.ENTER || (h.before("<br>"), pe(h)), a = i, r = e.timeStamp } }, !0), k.events.on("keyup", function () { n = 1 }) } }(), !h) return !1; var e = k.$wp || k.$sc; e.append(l), l.data("instance", k); var t = e.scrollTop() - ("static" != e.css("position") ? e.offset().top : 0), i = e.scrollLeft() - ("static" != e.css("position") ? e.offset().left : 0); i -= k.helpers.getPX(e.css("border-left-width")), t -= k.helpers.getPX(e.css("border-top-width")), k.$el.is("img") && k.$sc.is("body") && (i = t = 0); var n = Ze(); Qe() && (n = n.find(".fr-img-wrap")); var a = 0, r = 0; k.opts.iframe && (a = k.helpers.getPX(k.$wp.find(".fr-iframe").css("padding-top")), r = k.helpers.getPX(k.$wp.find(".fr-iframe").css("padding-left"))), l.css("top", (k.opts.iframe ? n.offset().top + a : n.offset().top + t) - 1).css("left", (k.opts.iframe ? n.offset().left + r : n.offset().left + i) - 1).css("width", n.get(0).getBoundingClientRect().width).css("height", n.get(0).getBoundingClientRect().height).addClass("fr-active") } function K(e) { return '<div class="fr-handler fr-h'.concat(e, '"></div>') } function W(e) { Qe() ? h.parents(".fr-img-caption").css("width", e) : h.css("width", e) } function Y(e) { if (!k.core.sameInstance(l)) return !0; if (e.preventDefault(), e.stopPropagation(), k.$el.find("img.fr-error").left) return !1; k.undo.canDo() || k.undo.saveStep(); var t = e.pageX || e.originalEvent.touches[0].pageX; if ("mousedown" == e.type) { var i = k.$oel.get(0).ownerDocument, n = i.defaultView || i.parentWindow, a = !1; try { a = n.location != n.parent.location && !(n.$ && n.$.FE) } catch (s) { } a && n.frameElement && (t += k.helpers.getPX(_(n.frameElement).offset().left) + n.frameElement.clientLeft) } (d = _(this)).data("start-x", t), d.data("start-width", h.width()), d.data("start-height", h.height()); var r = h.width(); if (k.opts.imageResizeWithPercent) { var o = h.parentsUntil(k.$el, k.html.blockTagsQuery()).get(0) || k.el; r = (r / _(o).outerWidth() * 100).toFixed(2) + "%" } W(r), f.show(), k.popups.hideAll(), Xe() } function V(e) { if (!k.core.sameInstance(l)) return !0; var t; if (d && h) { if (e.preventDefault(), k.$el.find("img.fr-error").left) return !1; var i = e.pageX || (e.originalEvent.touches ? e.originalEvent.touches[0].pageX : null); if (!i) return !1; var n = i - d.data("start-x"), a = d.data("start-width"); if ((d.hasClass("fr-hnw") || d.hasClass("fr-hsw")) && (n = 0 - n), k.opts.imageResizeWithPercent) { var r = h.parentsUntil(k.$el, k.html.blockTagsQuery()).get(0) || k.el; a = ((a + n) / _(r).outerWidth() * 100).toFixed(2), k.opts.imageRoundPercent && (a = Math.round(a)), W("".concat(a, "%")), (t = Qe() ? (k.helpers.getPX(h.parents(".fr-img-caption").css("width")) / _(r).outerWidth() * 100).toFixed(2) : (k.helpers.getPX(h.css("width")) / _(r).outerWidth() * 100).toFixed(2)) === a || k.opts.imageRoundPercent || W("".concat(t, "%")), h.css("height", "").removeAttr("height") } else a + n >= k.opts.imageMinWidth && (W(a + n), t = Qe() ? k.helpers.getPX(h.parents(".fr-img-caption").css("width")) : k.helpers.getPX(h.css("width"))), t !== a + n && W(t), ((h.attr("style") || "").match(/(^height:)|(; *height:)/) || h.attr("height")) && (h.css("height", d.data("start-height") * h.width() / d.data("start-width")), h.removeAttr("height")); H(), k.events.trigger("image.resize", [qe()]) } } function G(e) { if (!k.core.sameInstance(l)) return !0; if (d && h) { if (e && e.stopPropagation(), k.$el.find("img.fr-error").left) return !1; d = null, f.hide(), H(), k.undo.saveStep(), k.events.trigger("image.resizeEnd", [qe()]) } else l.removeClass("fr-active") } function X() { v.forEach(function (e, t) { var i = k.popups.get("filesManager.insert"); i.find(".fr-checkbox-file-" + t).get(0).disabled = !0, document.getElementById("fr-file-autoplay-button-" + t) && (document.getElementById("fr-file-autoplay-button-" + t).disabled = !0, document.getElementById("fr-file-autoplay-button-" + t).parentElement.classList.add("fr-checkbox-disabled"), document.getElementById("fr-file-autoplay-button-" + t).parentElement.classList.remove("fr-files-checkbox")), i.find(".fr-checkbox-" + t).get(0).classList.remove("fr-files-checkbox"), i.find(".fr-checkbox-" + t).get(0).classList.add("fr-checkbox-disabled") }) } function j(e, t, i, n) { k.edit.on(), h && h.addClass("fr-error"), P[e] ? (v.set(n, P[e]), X(), function a() { v.forEach(function (e, t) { k.popups.get("filesManager.insert"), document.getElementById("fr-file-edit-button-".concat(t)).classList.add("fr-disabled"), document.getElementById("fr-file-view-button-".concat(t)).classList.add("fr-disabled"), document.getElementById("fr-file-insert-button-".concat(t)).classList.add("fr-disabled") }) }(), ne(k.language.translate(P[e]), n)) : ne(k.language.translate("Something went wrong. Please try again."), n), !h && i && $e(i), k.events.trigger("filesManager.error", [{ code: e, message: P[e] }, t, i]) } function q() { var e = k.popups.get("filesManager.insert"), t = e.find('.fr-command[data-cmd="insertAll"]'), i = e.find('.fr-command[data-cmd="deleteAll"]'), n = !0; S.forEach(function a(e, t, i) { S.get(t) && (n = !1) }), n ? t.addClass("fr-disabled") : t.removeClass("fr-disabled"), n ? i.addClass("fr-disabled") : i.removeClass("fr-disabled") } function Z(e) { var t = k.popups.get("filesManager.insert"); t.find(".fr-file-" + e).get(0) !== undefined && (t.find(".fr-file-" + e).get(0).outerHTML = ""), D["delete"](e), b["delete"](e), S["delete"](e), q(), 0 == b.size && (x = 0), v["delete"](e), k.popups.setPopupDimensions(t, !0), k.opts.toolbarBottom ? F(!0) : k.popups.setPopupDimensions(t), t.find(".fr-upload-progress") && 0 == b.size && t.find(".fr-upload-progress").addClass("fr-none") } function Q() { for (var e = k.popups.get("filesManager.insert"), t = e.find(".fr-insert-checkbox"), i = 0; i < t.length; i++)t.get(i).children.target.checked = !1, e.find(".fr-file-" + t.get(i).id.split("-").pop()).get(0).classList.add("fr-unchecked"); if (C) document.getElementById("fr-file-autoplay-button-".concat(C)) && (document.getElementById("fr-file-autoplay-button-".concat(C)).checked = !1), R = R.filter(function (e) { return e != C }); else { for (var n = e.find(".fr-file-autoplay-button"), a = 0; a < n.length; a++)n.get(a).checked = !1; R = [] } S = new Map, q() } function J(e) { var t = k.popups.get("filesManager.insert"); if (t || (t = _e()), t.find(".fr-layer.fr-active").removeClass("fr-active").addClass("fr-pactive"), t.find(".fr-files-progress-bar-layer").addClass("fr-active"), t.find(".fr-buttons").hide(), h) { var i = Ze(); k.popups.setContainer("filesManager.insert", k.$sc); var n = i.offset().left, a = i.offset().top + i.height(); k.popups.show("filesManager.insert", n, a, i.outerHeight()) } void 0 === e && te(k.language.translate("Uploading"), 0) } function ee(e) { var t = k.popups.get("filesManager.insert"); if (t && (t.find(".fr-layer.fr-pactive").addClass("fr-active").removeClass("fr-pactive"), t.find(".fr-files-progress-bar-layer").removeClass("fr-active"), t.find(".fr-buttons").show(), e || k.$el.find("img.fr-error").length)) { if (k.events.focus(), k.$el.find("img.fr-error").length && (k.$el.find("img.fr-error").remove(), k.undo.saveStep(), k.undo.run(), k.undo.dropRedo()), !k.$wp && h) { var i = h; Ye(!0), k.selection.setAfter(i.get(0)), k.selection.restore() } k.popups.hide("filesManager.insert") } } function te(e, t) { var i = k.popups.get("filesManager.insert"); if (i) { var n = i.find(".fr-files-progress-bar-layer"); n.find("h3").text(e + (t ? " ".concat(t, "%") : "")), n.removeClass("fr-error"), t ? (n.find("div").removeClass("fr-indeterminate"), n.find("div > span").css("width", "".concat(t, "%"))) : n.find("div").addClass("fr-indeterminate") } } function ie(e) { J(); var t = k.popups.get("filesManager.insert").find(".fr-files-progress-bar-layer"); t.addClass("fr-error"); var i = t.find("h3"); i.text(e), k.events.disableBlur(), i.focus() } function ne(e, t) { var i = k.popups.get("filesManager.insert"), n = i.find(".fr-upload-progress-layer"), a = i.find(".fr-file-".concat(t)); n.addClass("fr-error"), a.find("h5").text(e) } function ae(e) { var n = k.popups.get("filesManager.insert"); n.find(".fr-upload-progress-layer").hasClass("fr-active") || n.find(".fr-upload-progress-layer").addClass("fr-active"), n.find(".fr-upload-progress").removeClass("fr-none"); var t = b.get(e), i = function o(e, t) { return t.toLocaleDateString(k.opts.language ? k.opts.language : undefined, { weekday: "long", year: "numeric", month: "long", day: "numeric" }) + " . " + function i(e) { if (0 == e) return "0 Bytes"; var t = Math.floor(Math.log(e) / Math.log(1024)); return 1 * (e / Math.pow(1024, t)).toFixed(2) + " " + ["Bytes", "KB", "MB", "GB", "TB"][t] }(e.size) }(t, new Date), a = S.get(e) ? "" : "fr-unchecked ", r = "\n        <div class='fr-file-list-item fr-file-".concat(e, " ").concat(a, "' draggable = \"").concat(!a, '" >\n        <div class=\'fr-file-item-left\' >\n    \n            <div class="fr-file-item-insert-checkbox fr-files-checkbox-line">\n            <div id="checkbox-key-').concat(e, '" class="fr-files-checkbox fr-insert-checkbox  fr-checkbox-').concat(e, '">\n            <input name="target" class="fr-insert-attr fr-checkbox-file-').concat(e, ' fr-file-insert-check" data-cmd="fileInsertCheckbox"\n             data-checked="_blank" type="checkbox" id="fr-link-target-').concat(k.id, '" tabIndex="0" />\n            <span>').concat('<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="10" height="10" viewBox="0 0 32 32"><path d="M27 4l-15 15-7-7-5 5 12 12 20-20z" fill="#FFF"></path></svg>', '\n            </span>\n        </div>\n                <label id="fr-label-target-').concat(k.id, "\"></label>\n            </div>\n    \n            <div class='fr-file-item-icon fr-file-item-icon-").concat(e, "' >\n                <img src='https://secure.webtoolhub.com/static/resources/icons/set112/f2afb6f7.png' alt='Image preview' class='thumbnail-padding' height='36px' width='36px' />\n            </div>\n\n            <div class='fr-file-item-description' >\n                    <div class='fr-file-name tooltip'>").concat(re(t.name, 20), '<span class="').concat(20 < t.name.length ? "tooltiptext" : "fr-none", '">').concat(t.name, "</span></div>\n                  <div class='fr-file-description tooltip'>").concat(re(i, 50), '<span class="').concat(50 < i.length ? "tooltiptext" : "fr-none", '">').concat(i, "</span></div>\n                  <div class='fr-file-error'>\n                    <h5 class='fr-file-error-h5'></h5>\n                </div>\n            </div>\n    \n        </div>\n\n        <div class='fr-file-item-right fr-file-item-right-").concat(e, "'>") + le(e) + "</div>\n    </div>"; n.find(".fr-upload-progress-layer")[0].innerHTML = r + n.find(".fr-upload-progress-layer")[0].innerHTML, b.forEach(function s(e, t, i) { S.get(t) && n.find("input.fr-insert-attr.fr-checkbox-file-".concat(t))[0].setAttribute("checked", null) }), R.forEach(function (e) { document.getElementById("fr-file-autoplay-button-" + e).checked = !0 }), se(e, t), ee(), k.opts.toolbarBottom ? F(!0) : k.popups.setPopupDimensions(n) } function re(e, t, i) { return null == t && (t = 100), null == i && (i = "..."), e.length > t ? e.substring(0, t - i.length) + i : e } function oe(e) { switch (e) { case "application/msword": return k.icon.getFileIcon("docIcon"); case "application/vnd.openxmlformats-officedocument.wordprocessingml.document": return k.icon.getFileIcon("docxIcon"); case "image/gif": return k.icon.getFileIcon("gifIcon"); case "image/jpeg": return k.icon.getFileIcon("jpegIcon"); case "image/jpeg": return k.icon.getFileIcon("jpgIcon"); case "type/text": return k.icon.getFileIcon("logIcon"); case "video/quicktime": return k.icon.getFileIcon("movIcon"); case "audio/mp3": case "audio/mpeg": return k.icon.getFileIcon("mp3Icon"); case "video/mp4": return k.icon.getFileIcon("mp4Icon"); case "audio/ogg": return k.icon.getFileIcon("oggIcon"); case "video/ogg": return k.icon.getFileIcon("ogvIcon"); case "application/pdf": return k.icon.getFileIcon("pdfIcon"); case "image/png": return k.icon.getFileIcon("pngIcon"); case "text/plain": return k.icon.getFileIcon("txtIcon"); case "video/webm": return k.icon.getFileIcon("webmIcon"); case "image/webp": return k.icon.getFileIcon("webpIcon"); case "video/x-ms-wmv": return k.icon.getFileIcon("wmvIcon"); case "application/vnd.ms-excel": return k.icon.getFileIcon("xlsIcon"); case "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": return k.icon.getFileIcon("xlsxIcon"); case "application/x-zip-compressed": return k.icon.getFileIcon("zipIcon"); default: return k.icon.getFileIcon("defaultIcon") } } function se(n, a, e) { var r = k.popups.get("filesManager.insert"), t = r.find(".fr-file-item-icon-" + n).get(0); if (Ie(ve(a)) && "image/gif" != ve(a) && "image/webp" != ve(a)) { "a" != t.children[0].localName && (t.innerHTML = "<a target='_blank' href=''>" + t.innerHTML + "</a>"); r.find(".fr-file-item-icon-" + n).get(0).children[0].children[0]; var o = new FileReader; if (null != e && e) { var i = b.get(n); a.name = i.name, b.set(n, a) } if (o.onloadend = function () { r.find(".fr-file-item-icon-" + n).get(0).children[0].children[0].src = o.result; for (var e = atob(o.result.split(",")[1]), t = [], i = 0; i < e.length; i++)t.push(e.charCodeAt(i)); r.find(".fr-file-item-icon-" + n).get(0).children[0].href = window.URL.createObjectURL(new Blob([new Uint8Array(t)], { type: ve(a) })), r.find(".fr-file-item-icon-" + n).get(0).classList.add("file-item-thumbnail-hover") }, a) o.readAsDataURL(a); else { var s = oe(ve(a)); t.innerHTML = '<svg height="40px" width="40px" viewBox="0 0 55 5" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n        '.concat(s.path, "\n        </svg>") } } else { var l = oe(ve(a)); t.innerHTML = '<svg height="40px" width="40px" viewBox="0 0 55 55" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n      '.concat(l.path, "\n      </svg>") } } function le(e) { var t = ""; if (Ce(ve(b.get(e)))) { t = '\n      <div class="fr-files-checkbox-line align-autoplay">\n      <div id="checkbox-key-'.concat(e, '" class="fr-files-checkbox fr-autoplay-checkbox  fr-checkbox-').concat(e, '">  \n                   \n      <input type="checkbox" id="fr-file-autoplay-button-').concat(e, '" class="fr-file-button-').concat(e, ' fr-file-autoplay-button" data-title="Edit" data-param1="').concat(e, '" role="button" />\n\n      <span>').concat('<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="10" height="10" viewBox="0 0 32 32"><path d="M27 4l-15 15-7-7-5 5 12 12 20-20z" fill="#FFF"></path></svg>', " </span>\n      </div>      \n      <label  class='fr-autoplay-checkbox-label'>Autoplay </label>\n      </div>") } var i = "application/msword", n = "application/vnd.openxmlformats-officedocument.wordprocessingml.document", a = "", r = ""; return Ae(ve(b.get(e))) && (a = "fr-disabled"), Ce(ve(b.get(e))) && (a = "fr-disabled"), ke(ve(b.get(e))) && (r = a = "fr-disabled", ve(b.get(e)) != i && ve(b.get(e)) != n || k.opts.googleOptions && !k.helpers.isMobile() && k.opts.googleOptions.API_KEY && k.opts.googleOptions.CLIENT_ID && (a = ""), "text/plain" != ve(b.get(e)) && ve(b.get(e)) != i && "application/pdf" != ve(b.get(e)) && ve(b.get(e)) != n && "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" != ve(b.get(e)) && "application/vnd.ms-excel" != ve(b.get(e)) && "type/text" != ve(b.get(e)) || (r = "")), t += '<div class=\'fr-file-item-action-buttons\' >\n                <button type="button" id="fr-file-insert-button-'.concat(e, '" class=" fr-doc-edit-').concat(e, " fa fa-upload fr-img-icon fr-btn fr-command fr-submit fr-file-action-icons \n                fr-file-button-").concat(e, " fr-file-insert-button-").concat(e, ' fr-file-insert-button" data-cmd="imageInsertByUpload" data-title="Insert" data-param1="').concat(e, '" tabIndex="2" role="button"></button>\n                <button type="button" id="fr-file-edit-button-').concat(e, '" class=" fr-doc-edit-').concat(e, " ").concat(a, "  fa fa-pencil-square-o fr-img-icon fr-btn fr-command fr-submit \n                fr-file-action-icons fr-file-edit-button-").concat(e, " fr-file-button-").concat(e, ' fr-file-edit-button" data-cmd="editImage" data-title="Edit" data-param1="').concat(e, '" role="button"></button>\n                <span class="fr-file-view-').concat(e, '"><button type="button" id="fr-file-view-button-').concat(e, '" class=" fr-doc-edit-').concat(e, " ").concat(r, " fa fa-eye fr-img-icon fr-btn fr-command fr-submit fr-file-action-icons \n                fr-file-view-button-").concat(e, ' fr-file-view-button" data-cmd="viewImage" data-title="View" data-param1="').concat(e, '" tabIndex="2" role="button"></button></span>\n                <button type="button" id="fr-file-delete-button-').concat(e, '" class=" fr-doc-edit-').concat(e, " fa fa-trash-o fr-img-icon fr-btn fr-command fr-submit fr-file-action-icons\n                fr-file-button-").concat(e, ' fr-file-delete-button" data-cmd="deleteImage" data-title="Delete" data-param1="').concat(e, '" role="button"></button>\n                 \n            </div>\n            <div id="user_area-').concat(e, "\" style=\"display: none;\">\n            \n              <div id=\"file_container\"></div>\n              <div style='display:block;text-align: center; margin-left:50%; id='edit-file-loader' class='fr-file-loader'></div>\n          </div> \n            ") } function de(e, t, i) { var n = k.popups.get("filesManager.insert"); if (!i && e <= 100) { n.find(".fr-checkbox-file-" + t).get(0).disabled = !0, n.find(".fr-checkbox-" + t).get(0).classList.remove("fr-files-checkbox"), n.find(".fr-checkbox-" + t).get(0).classList.add("fr-checkbox-disabled"); var a = n.find(".fr-file-progress-circle-" + t), r = n.find(".fr-file-upload-percent-" + t); return 50 < e ? a.get(0).setAttribute("class", "fr-file-progress-circle-" + t + " progress-circle p" + Math.floor(e) + " over50") : a.get(0).setAttribute("class", "fr-file-progress-circle-" + t + " progress-circle p" + Math.floor(e)), r.get(0).innerHTML = Math.floor(e) + "%", void fe(t, e, i) } i && (n.find(".fr-checkbox-file-" + t).get(0).disabled = !1, n.find(".fr-checkbox-" + t).get(0).classList.remove("fr-checkbox-disabled"), n.find(".fr-checkbox-" + t).get(0).classList.add("fr-files-checkbox"), n.find(".fr-file-item-right-" + t).get(0).innerHTML = le(t), fe(t, 100, i)) } function fe(e, t, i) { var n = k.popups.get("filesManager.insert"); n.find(".fr-progress-bar").removeClass("fr-none").addClass("fr-display-block"), n.find(".fr-upload-progress").hasClass("fr-height-set") && k.popups.setFileListHeight(n); var a = 0; m.set(e, t), m.forEach(function (e, t) { a += e }), a /= m.size, 100 == t && i && y++, n.find('.fr-command[data-cmd="filesUpload"]').addClass("fr-disabled"), n.find('.fr-command[data-cmd="filesByURL"]').addClass("fr-disabled"), n.find('.fr-command[data-cmd="filesEmbed"]').addClass("fr-disabled"), n.find(".fr-progress-bar").get(0).style.width = a + "%", y == m.size && (n.find(".fr-progress-bar").removeClass("fr-display-block").addClass("fr-none"), m = new Map, y = 0, n.find('.fr-command[data-cmd="filesUpload"]').removeClass("fr-disabled"), n.find('.fr-command[data-cmd="filesByURL"]').removeClass("fr-disabled"), n.find('.fr-command[data-cmd="filesEmbed"]').removeClass("fr-disabled")) } function ce(i, n) { ee(), k.popups.get("filesManager.insert").find(".fr-upload-progress-layer").addClass("fr-active"), i.forEach(function (e, t) { Ie(ve(e)) && k.opts.imageUploadRemoteUrls && k.opts.imageCORSProxy && k.opts.imageUpload ? xe(e, i, h, n[t]) : D.set(n[t], e) }) } function pe(e) { (function i(e) { if ("false" == _(this).parents("[contenteditable]").not(".fr-element").not(".fr-img-caption").not("body").first().attr("contenteditable")) return !0; if (e && "touchend" == e.type && r) return !0; if (e && k.edit.isDisabled()) return e.stopPropagation(), e.preventDefault(), !1; for (var t = 0; t < vt.INSTANCES.length; t++)vt.INSTANCES[t] != k && vt.INSTANCES[t].events.trigger("image.hideResizer"); k.toolbar.disable(), e && (e.stopPropagation(), e.preventDefault()); k.helpers.isMobile() && (k.events.disableBlur(), k.$el.blur(), k.events.enableBlur()); k.opts.iframe && k.size.syncIframe(); h = _(this), H(), k.browser.msie ? (k.popups.areVisible() && k.events.disableBlur(), k.win.getSelection && (k.win.getSelection().removeAllRanges(), k.win.getSelection().addRange(k.doc.createRange()))) : k.selection.clear(); k.helpers.isIOS() && (k.events.disableBlur(), k.$el.blur()); k.button.bulkRefresh(), k.events.trigger("video.hideResizer") }).call(e.get(0)) } function ge() { var e = _(this); e.removeClass("fr-uploading"), e.next().is("br") && e.next().remove(), (0 == a.length || 0 < a.length && a.length == w) && (s = e), "VIDEO" == e.get(0).tagName || "AUDIO" == e.get(0).tagName ? k.selection.setAfter(e.parent()) : k.selection.setAfter(e), k.undo.saveStep(), k.events.trigger("filesManager.loaded", [e]), me(a) } function ue() { var e, t = Array.prototype.slice.call(k.el.querySelectorAll("video, .fr-video > *")), i = []; for (e = 0; e < t.length; e++)i.push(t[e].getAttribute("src")), _(t[e]).toggleClass("fr-draggable", k.opts.videoMove), "" === t[e].getAttribute("class") && t[e].removeAttribute("class"), "" === t[e].getAttribute("style") && t[e].removeAttribute("style"); if (n) for (e = 0; e < n.length; e++)i.indexOf(n[e].getAttribute("src")) < 0 && k.events.trigger("video.removed", [_(n[e])]); n = t } function me(e) { if (null != e) { if (0 == e.length) return void (null != s && ("VIDEO" == s.get(0).tagName ? k.video._editVideo(s.parent()) : "IMG" == s.get(0).tagName ? k.image.edit(s) : s.trigger("click"), k.toolbar.disable())); he(e.shift(), e) } } function i(e) { var t = !1; if (Ie(ve(D.get(e)))) { var i = D.get(e).link, n = k.o_doc.createElement("img"); n.src = i, h = n, o = e, k.imageTUI.launch(k, !1, e), t = !0 } else if (ke(ve(D.get(e)))) { var a = { apiKey: k.opts.googleOptions.API_KEY, clientId: k.opts.googleOptions.CLIENT_ID, authorizeButton: "authorize_button-".concat(e), signoutButton: "signout_button", userArea: "user_area-".concat(e), fileInput: "file_input", fileIndex: e, file: b.get(e), fileContainer: "file_container", loadingText: "File is being uploaded...", events: { onInvalidFile: function (e) { }, onError: function (e) { } } }; c = function f(p) { var r, e = ["https://www.googleapis.com/discovery/v1/apis/drive/v2/rest"], g = "id,title,mimeType,userPermission,editable,copyable,shared,fileSize", u = "-------314159265358979323846", m = "\r\n--" + u + "\r\n", v = "\r\n--" + u + "--", t = (document.getElementById(p.authorizeButton), document.getElementById(p.userArea)); p.events || (p.events = {}); function i() { gapi.client.init({ apiKey: p.apiKey, clientId: p.clientId, discoveryDocs: e, scope: "https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.appdata" }).then(function () { gapi.auth2.getAuthInstance().isSignedIn.listen(n), n(gapi.auth2.getAuthInstance().isSignedIn.get()), function t(e) { gapi.auth2.getAuthInstance().isSignedIn.get() ? o() : Promise.resolve(gapi.auth2.getAuthInstance().signIn()).then(function () { o() }) }() }, function (e) { p.events.onError(e) }) } function n(e) { e && (t.style.display = "block") } function a(e) { var t = gapi.auth.getToken().access_token, i = r, n = "https://docs.google.com/feeds/download/documents/export/Export?id=" + i + "&format=docx&access_token=" + t, a = new XMLHttpRequest; a.open("get", n), a.responseType = "arraybuffer", a.onload = function () { var e = new Blob([new Uint8Array(this.response)], { type: "application/vnd.openxmlformats-officedocument.wordprocessingml.document" }), t = b.get(p.fileIndex); e.name = t.name, e.lastModified = t.lastModified, e.lastModifiedDate = t.lastModifiedDate, b.set(p.fileIndex, e), k.filesManager.upload(e, D, h, p.fileIndex), l() }, a.send() } function o(e) { !function n(e) { for (var t = document.getElementsByClassName("fr-doc-edit-".concat(e)), i = 0; i < t.length; i++)t[i].setAttribute("disabled", !0), t[i].classList.add("fr-disabled") }(p.fileIndex); var t = p.file; t ? function i(d, f) { var c = new FileReader; c.readAsArrayBuffer(d), c.onload = function (e) { for (var t = { title: d.name, mimeType: "application/vnd.google-apps.document" }, i = "", n = new Uint8Array(c.result), a = n.byteLength, r = 0; r < a; r++)i += String.fromCharCode(n[r]); var o = btoa(i), s = m + "Content-Type: application/json; charset=UTF-8\r\n\r\n" + JSON.stringify(t) + m + "Content-Type: application/octet-stream\r\nContent-Transfer-Encoding: base64\r\n\r\n" + o + v, l = gapi.client.request({ path: "/upload/drive/v2/files", method: "POST", params: { uploadType: "multipart", fields: g }, headers: { "Content-Type": 'multipart/related; boundary="' + u + '"', "Content-Length": s.Length }, body: s }); f || (f = function (e) { }), l.execute(function (e, t) { e.error ? p.events.onError(e.error) : f(e) }) } }(t, s) : p.events.onInvalidFile("File is not selected") } function s(e) { r = e.id; var t = "https://docs.google.com/document/d/" + e.id + "/edit", i = k.o_doc.body, n = k.o_doc.createElement("div"); n.setAttribute("id", "editDocContainer"), n.style.cssText = "position: fixed; top: 0;left: 0;padding: 0;width: 100%;height: 100%;background: rgba(255,255,255,1);z-index: 9998;display:block", n.innerHTML = '<label>Sign Out : </label><input type="checkbox" id ="markSignOut" role="button"/>  <button id="signout_button"  class="fr-trim-button" >Save </button> <button id="cancel_file_edit" class="fr-trim-button">Cancel</button>  <iframe title="Edit your file" frameBorder="0" width="100%" height="700px" src="' + t + '"></iframe>', i.appendChild(n), document.getElementById("signout_button").onclick = a, document.getElementById("cancel_file_edit").onclick = l } function l() { document.getElementById("markSignOut").checked && gapi.auth2.getAuthInstance().signOut(); var e = document.getElementById("editDocContainer"); e.parentNode.removeChild(e), document.getElementById("user_area-".concat(p.fileIndex)) && (document.getElementById("user_area-".concat(p.fileIndex)).style.display = "none"), function n(e) { for (var t = document.getElementsByClassName("fr-doc-edit-".concat(e)), i = 0; i < t.length; i++)t[i].removeAttribute("disabled"), t[i].classList.remove("fr-disabled") }(p.fileIndex) } p.events.onInvalidFile = p.events.onInvalidFile || function (e) { }, p.events.onError = p.events.onError || function (e) { }; var d = {}; return d.handleClientLoad = function () { gapi.load("client:auth2", i) }, d }(a), function r(e, t) { var n = function n(e, t) { var i = document.createElement("script"); i.src = e, i.onload = function () { this.onload = function () { }, c.handleClientLoad() }, i.onreadystatechange = function () { "complete" === this.readyState && this.onload() }, (document.getElementsByTagName("head")[0] || document.body).appendChild(i) }; !function i() { 0 != e.length ? n(e.shift(), i) : t && t() }() }(["https://apis.google.com/js/api.js"], function () { }) } t && (g = !0) } function ve(e) { var t = new Map([[".doc", "application/msword"], [".docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"], [".gif", "image/gif"], [".jpeg", "image/jpeg"], [".jpg", "image/jpeg"], [".txt", "text/plain"], [".log", "type/text"], [".mov", "video/quicktime"], [".mp3", "audio/mpeg"], [".mp4", "video/mp4"], [".ogg", "audio/ogg"], [".ogv", "video/ogg"], [".pdf", "application/pdf"], [".png", "image/png"], [".webm", "video/webm"], [".webp", "image/webp"], [".wmv", "video/x-ms-wmv"], [".xls", "application/vnd.ms-excel"], [".xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"], [".zip", "application/x-zip-compressed"]]); if ("" != e.type) return e.type; var i = /(?:\.([^.]+))?$/.exec(e.name)[1]; return t.get(".".concat(i)) } function he(s, e) { if (ke(ve(D.get(s)))) { var t = D.get(s).link, i = D.get(s).text, n = D.get(s).response; if (k.edit.on(), k.events.focus(!0), k.selection.restore(), k.opts.fileUseSelectedText && k.selection.text().length && (i = k.selection.text()), t.endsWith(".pdf") || t.endsWith(".txt")) be('<iframe src="'.concat(t, '" title="').concat(i, '" width="\u201d100%\u201d" height="\u201d100%\u201d" class="fr-file"></iframe>'), !0); else k.html.insert('<a href="'.concat(t, '" target="_blank" id="fr-inserted-file" class="fr-file">').concat(i, "</a>")); var a = k.$el.find("#fr-inserted-file"); a.removeAttr("id"), k.undo.saveStep(), function E() { var e, t = Array.prototype.slice.call(k.el.querySelectorAll("a.fr-file")), i = []; for (e = 0; e < t.length; e++)i.push(t[e].getAttribute("href")); if (A) for (e = 0; e < A.length; e++)i.indexOf(A[e].getAttribute("href")) < 0 && k.events.trigger("file.unlink", [A[e]]); A = t }(), k.selection.clear(), k.selection.setAfter(a), k.events.trigger("file.inserted", [a, n]), me(e) } if (Ie(ve(D.get(s)))) { var o = D.get(s).link, r = D.get(s).sanitize, l = D.get(s).data, d = D.get(s).$existing_img, f = D.get(s).response; d && "string" == typeof d && (d = k.$(d)), k.edit.off(), te(k.language.translate("Loading image")), r && (o = k.helpers.sanitizeURL(o)); var c = new Image; c.onload = function () { var e, t; if (d) { k.undo.canDo() || d.hasClass("fr-uploading") || k.undo.saveStep(); var i = d.data("fr-old-src"); d.data("fr-image-pasted") && (i = null), k.$wp ? ((e = d.clone().removeData("fr-old-src").removeClass("fr-uploading").removeAttr("data-fr-image-pasted")).off("load"), i && d.attr("src", i), d.replaceWith(e)) : e = d; for (var n = e.get(0).attributes, a = 0; a < n.length; a++) { var r = n[a]; 0 === r.nodeName.indexOf("data-") && e.removeAttr(r.nodeName) } if (void 0 !== l) for (t in l) l.hasOwnProperty(t) && "link" != t && e.attr("data-".concat(t), l[t]); e.on("load", ge), e.attr("src", o), k.edit.on(), k.undo.saveStep(), k.events.disableBlur(), k.$el.blur(), k.events.trigger(i ? "image.replaced" : "image.inserted", [e, f]) } else e = function s(e, t, i) { var n, a = _(document.createElement("img")).attr("src", e); if (t && void 0 !== t) for (n in t) t.hasOwnProperty(n) && "link" != n && (" data-".concat(n, '="').concat(t[n], '"'), a.attr("data-".concat(n), t[n])); var r = k.opts.imageDefaultWidth; r && "auto" != r && (r = k.opts.imageResizeWithPercent ? "100%" : "".concat(r, "px")); a.attr("style", r ? "width: ".concat(r, ";") : ""), je(a, k.opts.imageDefaultDisplay, k.opts.imageDefaultAlign), a.on("load", i), a.on("error", i), k.edit.on(), k.events.focus(!0), k.selection.restore(), k.undo.saveStep(), k.opts.imageSplitHTML ? k.markers.split() : k.markers.insert(); k.html.wrap(); var o = k.$el.find(".fr-marker"); o.length ? (o.parent().is("hr") && o.parent().after(o), k.node.isLastSibling(o) && o.parent().hasClass("fr-deletable") && o.insertAfter(o.parent()), o.replaceWith(a)) : k.$el.append(a); return a }(o, l, ge), k.undo.saveStep(), k.events.disableBlur(), k.$el.blur(), k.events.trigger("image.inserted", [e, f]) }, c.onerror = function () { j(L), me(e) }, c.src = o } if (Ce(ve(D.get(s))) || Ae(ve(D.get(s)))) if (C = s, "video/url" == ve(D.get(s))) { var p = !1; if (document.getElementById("fr-file-autoplay-button-" + s) !== undefined && (p = document.getElementById("fr-file-autoplay-button-" + s).checked), p && D.get(s) !== undefined && -1 < D.get(s).video.indexOf("iframe") && D.get(s).video.indexOf("autoplay=1") < 0) { var g = D.get(s).video.substring(D.get(s).video.indexOf("src") + 3), u = "&"; (g = (g = g.substring(g.indexOf('"') + 1)).substring(0, g.indexOf('"'))).indexOf("?") < 0 && (u = "?"), D.get(s).video = D.get(s).video.replace(g, g += u + "autoplay=1") } else !p && D.get(s).video.indexOf(!1) && (-1 < D.get(s).video.indexOf("&autoplay=1") && (D.get(s).video = D.get(s).video.replace("&autoplay=1", "")), -1 < D.get(s).video.indexOf("?autoplay=1") && (D.get(s).video = D.get(s).video.replace("?autoplay=1", ""))); k.events.focus(!0), k.selection.restore(), k.html.insert('<span contenteditable="false" draggable="true" class="fr-jiv fr-video fr-deletable">'.concat(D.get(s).video, "</span>"), !1, k.opts.videoSplitHTML), k.popups.hide("filesManager.insert"); var m = k.$el.find(".fr-jiv"); m.removeClass("fr-jiv"), m.toggleClass("fr-rv", k.opts.videoResponsive), function M(e, t, i) { !k.opts.htmlUntouched && k.opts.useClasses ? (e.removeClass("fr-fvl fr-fvr fr-dvb fr-dvi"), e.addClass("fr-fv".concat(i[0], " fr-dv").concat(t[0]))) : "inline" == t ? (e.css({ display: "inline-block" }), "center" == i ? e.css({ "float": "none" }) : "left" == i ? e.css({ "float": "left" }) : e.css({ "float": "right" })) : (e.css({ display: "block", clear: "both" }), "left" == i ? e.css({ textAlign: "left" }) : "right" == i ? e.css({ textAlign: "right" }) : e.css({ textAlign: "center" })) }(m, k.opts.videoDefaultDisplay, k.opts.videoDefaultAlign), m.toggleClass("fr-draggable", k.opts.videoMove), k.events.trigger("video.inserted", [m]), ge.call(m) } else { var v = D.get(s).link, h = D.get(s).sanitize, b = D.get(s).data, y = D.get(s).$existing_img, w = D.get(s).response; k.edit.off(), h && (v = k.helpers.sanitizeURL(v)), function I() { var e, t; if (y) { k.undo.canDo() || y.find("video").hasClass("fr-uploading") || k.undo.saveStep(); var i = y.find("video").data("fr-old-src"), n = y.data("fr-replaced"); y.data("fr-replaced", !1), k.$wp ? ((e = y.clone(!0)).find("video").removeData("fr-old-src").removeClass("fr-uploading"), e.find("video").off("canplay"), i && y.find("video").attr("src", i), y.replaceWith(e)) : e = y; for (var a = e.find("video").get(0).attributes, r = 0; r < a.length; r++) { var o = a[r]; 0 === o.nodeName.indexOf("data-") && e.find("video").removeAttr(o.nodeName) } if (void 0 !== b) for (t in b) b.hasOwnProperty(t) && "link" != t && e.find("video").attr("data-".concat(t), b[t]); e.find("video").on("canplay", ge), e.find("video").attr("src", v), k.edit.on(), ue(), k.undo.saveStep(), k.$el.blur(), k.events.trigger(n ? "video.replaced" : "video.inserted", [e, w]) } else e = function g(e, t, i, n, a) { var r, o = ""; if (t && void 0 !== t) for (r in t) t.hasOwnProperty(r) && "link" != r && (o += " data-".concat(r, '="').concat(t[r], '"')); var s, l = k.opts.videoDefaultWidth; l && "auto" != l && (l = "".concat(l, "px")); if (Ae(n)) s = _(document.createElement("span")).attr("contenteditable", "false").attr("draggable", "true").attr("class", "fr-video fr-dv" + k.opts.videoDefaultDisplay[0] + ("center" != k.opts.videoDefaultAlign ? " fr-fv" + k.opts.videoDefaultAlign[0] : "")).html('<audio src="' + e + '" ' + o + " controls>" + k.language.translate("Your browser does not support HTML5 video.") + "</audio>"); else { var d = "", f = document.getElementById("fr-file-autoplay-button-" + a).checked; f && (d = "autoplay"), s = _(document.createElement("span")).attr("contenteditable", "false").attr("draggable", "true").attr("class", "fr-video fr-dv" + k.opts.videoDefaultDisplay[0] + ("center" != k.opts.videoDefaultAlign ? " fr-fv" + k.opts.videoDefaultAlign[0] : "")).html('<video src="' + e + '" ' + o + (l ? ' style="width: ' + l + ';" ' : "") + d + "  controls>" + k.language.translate("Your browser does not support HTML5 video.") + "</video>") } s.toggleClass("fr-draggable", k.opts.videoMove), k.edit.on(), k.events.focus(!0), k.selection.restore(), k.undo.saveStep(), k.opts.videoSplitHTML ? k.markers.split() : k.markers.insert(); k.html.wrap(); var c = k.$el.find(".fr-marker"); k.node.isLastSibling(c) && c.parent().hasClass("fr-deletable") && c.insertAfter(c.parent()); c.replaceWith(s); var p = ""; p = Ae(n) ? "audio" : "video", s.find(p).get(0).readyState > s.find(p).get(0).HAVE_FUTURE_DATA || k.helpers.isIOS() ? i.call(s.find(p).get(0)) : (s.find(p).on("canplaythrough load", i), s.find(p).on("error", i)); return s }(v, b, ge, ve(D.get(s)), s), ue(), k.undo.saveStep(), k.events.trigger("video.inserted", [e, w]) }() } k.popups.hide("filesManager.insert"), S["delete"](s); var x = k.popups.get("filesManager.insert"); x.find("input.fr-insert-attr.fr-checkbox-file-".concat(s))[0].checked = !1, x.find(".fr-file-" + s).get(0).classList.add("fr-unchecked"), q(), document.getElementById("fr-file-autoplay-button-" + s) && (document.getElementById("fr-file-autoplay-button-" + s).checked = !1), R = R.filter(function (e) { return e != s }) } function be(e, t) { var i, n; vt.VIDEO_EMBED_REGEX.test(e) ? (i = "video", n = k.opts.videoSplitHTML) : vt.IMAGE_EMBED_REGEX.test(e) && (i = "image", n = k.opts.imageSplitHTML), k.events.focus(!0), k.selection.restore(); var a = !1; h && ($e(), a = !0), k.html.insert('<span id="fr-inserted-file" contenteditable="true" draggable="true" class="fr-'.concat(i, ' fr-jiv fr-deletable">').concat(e, "</span>"), !1, n), k.popups.hide("filesManager.insert"); var r = k.$el.find(".fr-jiv"); r.removeClass("fr-jiv"), "video" == i && (r.toggleClass("fr-rv", k.opts.videoResponsive), function o(e, t, i) { !k.opts.htmlUntouched && k.opts.useClasses ? (e.removeClass("fr-fvl fr-fvr fr-dvb fr-dvi"), e.addClass("fr-fv".concat(i[0], " fr-dv").concat(t[0]))) : "inline" == t ? (e.css({ display: "inline-block" }), "center" == i ? e.css({ "float": "none" }) : "left" == i ? e.css({ "float": "left" }) : e.css({ "float": "right" })) : (e.css({ display: "block", clear: "both" }), "left" == i ? e.css({ textAlign: "left" }) : "right" == i ? e.css({ textAlign: "right" }) : e.css({ textAlign: "center" })) }(r, k.opts.videoDefaultDisplay, k.opts.videoDefaultAlign), r.toggleClass("fr-draggable", k.opts.videoMove), k.events.trigger(a ? "video.replaced" : "video.inserted", [r])), "image" == i && (je(r, k.opts.imageDefaultDisplay, k.opts.imageDefaultAlign), r.find("img").removeClass("fr-dii"), r.find("img").addClass("fr-dib"), r.toggleClass("fr-draggable", k.opts.imageMove), k.events.trigger(a ? "image.replaced" : "image.inserted", [r])), t && (s = r, k.selection.clear(), k.toolbar.disable(), k.video._editVideo(s)) } function ye(e) { try { if (!1 === k.events.trigger("filesManager.uploaded", [e], !0)) return k.edit.on(), !1; var t = JSON.parse(e); return t.link ? t : (j(M, e), !1) } catch (i) { return j(B, e), !1 } } function we(e) { try { var t = _(e).find("Location").text(), i = _(e).find("Key").text(); return !1 === k.events.trigger("filesManager.uploadedToS3", [t, i, e], !0) ? (k.edit.on(), !1) : t } catch (n) { return j(B, e), !1 } } function xe(e, t, i, n) { var a, r, o; if (Ie(ve(e)) ? (a = k.opts.imageUploadParam, r = k.opts.imageUploadMethod) : ke(ve(e)) ? (a = k.opts.fileUploadParam, r = k.opts.fileUploadMethod) : Ce(ve(e)) ? (a = k.opts.videoUploadParam, r = k.opts.videoUploadMethod) : Ae(ve(e)) && (a = k.opts.videoUploadParam, r = k.opts.videoUploadMethod), -1 < $.indexOf(ve(e)) || !ve(e)) return j(T, null, null, n), !1; if (!1 === k.events.trigger("filesManager.beforeUpload", [t])) return !1; if ((null === k.opts.filesManagerUploadURL || k.opts.filesManagerUploadURL == p) && !k.opts.filesManagerUploadToS3) return function c(s, l, d) { var f = new FileReader; f.onload = function () { var e = f.result; if (f.result.indexOf("svg+xml") < 0) { for (var t = atob(f.result.split(",")[1]), i = [], n = 0; n < t.length; n++)i.push(t.charCodeAt(n)); if (e = window.URL.createObjectURL(new Blob([new Uint8Array(i)], { type: ve(l) })), Ie(ve(l))) { var a = { link: e, sanitize: !1, data: null, $existing_img: d, response: null, type: ve(l) }; D.set(s, a) } if (ke(ve(l))) { var r = { link: e, text: l.name, response: null, type: ve(l) }; D.set(s, r) } if (Ce(ve(l)) || Ae(ve(l))) { var o = { link: e, sanitize: !1, data: null, $existing_img: d, type: ve(l) }; D.set(s, o) } } }, f.readAsDataURL(l) }(n, e), !1; if (Ie(ve(e)) && (e.name || (e.name = (new Date).getTime() + "." + (ve(e) || "image/jpeg").replace(/image\//g, ""))), e.size > k.opts.filesManagerMaxSize) return j(O, null, null, n), !1; if (k.opts.filesManagerAllowedTypes.indexOf("*") < 0 && k.opts.filesManagerAllowedTypes.indexOf(ve(e)) < 0) return j(T, null, null, n), !1; if (function f(e) { isNaN(e) || (k.popups.get("filesManager.insert").find(".fr-file-item-right-" + e).get(0).innerHTML = '<div class=\'fr-file-item-action-buttons\' >\n                <button type="button" id="fr-file-cancel-upload-button-'.concat(e, '" class="fa fa-times fr-img-icon fr-btn fr-command fr-submit fr-file-action-icons \n                fr-file-button-').concat(e, ' fr-file-cancel-upload-button" data-cmd="cancelUpload" data-title="Cancel" data-param1="').concat(e, '" role="button"></button>\n                <button type="button" id="fr-upload-delete-button-').concat(e, '" class="fa fa-trash-o fr-img-icon fr-btn fr-command fr-submit fr-file-action-icons \n                fr-file-button-').concat(e, ' fr-upload-delete-button" data-cmd="deleteUpload" data-title="Delete" data-param1="').concat(e, '" role="button"></button>\n                <div class=\'progress-circle p0 fr-file-progress-circle-').concat(e, "'>\n                  <span class='fr-file-upload-percent-").concat(e, " fr-file-upload-percent'>0%</span>\n                  <div class='left-half-clipper'>\n                    <div class='first50-bar'></div>\n                    <div class='value-bar'></div>\n                  </div>\n                </div>\n            </div>"), m.set(e, 0)) }(n), k.drag_support.formdata && (o = k.drag_support.formdata ? new FormData : null), o) { var s; if (!1 !== k.opts.filesManagerUploadToS3) for (s in o.append("key", k.opts.filesManagerUploadToS3.keyStart + (new Date).getTime() + "-" + (e.name || "untitled")), o.append("success_action_status", "201"), o.append("X-Requested-With", "xhr"), o.append("Content-Type", ve(e)), k.opts.filesManagerUploadToS3.params) k.opts.filesManagerUploadToS3.params.hasOwnProperty(s) && o.append(s, k.opts.filesManagerUploadToS3.params[s]); for (s in k.opts.filesManagerUploadParams) k.opts.filesManagerUploadParams.hasOwnProperty(s) && o.append(s, k.opts.filesManagerUploadParams[s]); o.append(a, e, e.name); var l = k.opts.filesManagerUploadURL; k.opts.filesManagerUploadToS3 && (l = k.opts.filesManagerUploadToS3.uploadURL ? k.opts.filesManagerUploadToS3.uploadURL : "https://".concat(k.opts.filesManagerUploadToS3.region, ".amazonaws.com/").concat(k.opts.filesManagerUploadToS3.bucket)); var d = k.core.getXHR(l, r); d.onload = function () { ke(ve(e)) ? function p(e, t, i) { var n = this.status, a = this.response, r = this.responseXML, o = this.responseText; try { if (k.opts.filesManagerUploadToS3) if (201 === n) { var s = we(r); if (s) { var l = { link: s, text: e, response: a, type: i }; D.set(t, l) } } else j(B, a || r); else if (200 <= n && n < 300) { var d = ye(o); if (d) { var f = { link: d.link, text: e, response: a, type: i }; D.set(t, f) } } else j(I, a || o) } catch (c) { j(B, a || o) } }.call(d, e.name, n, ve(e)) : function g(e, t, i) { var n = this.status, a = this.response, r = this.responseXML, o = this.responseText; try { if (k.opts.filesManagerUploadToS3) if (201 == n) { var s = we(r); if (s) { var l = { link: s, sanitize: !1, data: [], $existing_img: e, response: a || r, type: i }; D.set(t, l) } } else j(B, a || r, e); else if (200 <= n && n < 300) { var d = ye(o); if (d) { var f = { link: d.link, sanitize: !1, data: d, $existing_img: e, response: a || r, type: i }; D.set(t, f) } } else j(I, a || o, e) } catch (c) { j(B, a || o, e) } }.call(d, h, n, ve(e)), de(100, n, !0) }, d.onerror = function () { j(B, this.response || this.responseText || this.responseXML, null, n) }, d.upload.onprogress = function (e) { !function i(e, t) { e.lengthComputable && de(e.loaded / e.total * 100 | 0, t, !1) }(e, n) }, d.onabort = function (e) { !function i(e, t) { j(U, t, h, e) }(n, e) }, d.send(o), u.set(n, d) } } function Ee(l) { k.events.$on(l, "click", ".fr-upload-progress-layer", function (e) { if (k.helpers.isMobile()) return e.stopPropagation(), !1 }, !0), k.events.$on(l, "dragover dragenter", ".fr-upload-progress-layer", function (e) { return e.preventDefault(), !(e.originalEvent.dataTransfer.dropEffect = "none") }, !0), k.events.$on(l, "dragleave dragend", ".fr-upload-progress-layer", function (e) { return e.preventDefault(), !1 }, !0), k.events.$on(l, "dragover dragenter", ".fr-files-upload-layer", function (e) { return _(this).addClass("fr-drop"), (k.browser.msie || k.browser.edge) && e.preventDefault(), !1 }, !0), k.events.$on(l, "dragleave dragend", ".fr-files-upload-layer", function (e) { return _(this).removeClass("fr-drop"), (k.browser.msie || k.browser.edge) && e.preventDefault(), !1 }, !0), k.events.$on(l, "click", ".fr-insert-checkbox", function (e) { if (this.classList.contains("fr-checkbox-disabled")) return this.children.target.disabled = !0, void (this.children.target.checked = !1); var t = parseInt(this.id.split("-").pop()); S.set(t, this.children.target.checked); for (var i = l.find('.fr-command[data-cmd="insertAll"]'), n = l.find('.fr-command[data-cmd="deleteAll"]'), a = l.find('input.fr-file-insert-check[type="checkbox"]'), r = a.length, o = !0, s = 0; s < r; s++)1 == a[s].checked && (o = !1); if (o ? i.addClass("fr-disabled") : i.removeClass("fr-disabled"), o ? n.addClass("fr-disabled") : n.removeClass("fr-disabled"), this.children.target.checked) l.find(".fr-file-" + this.id.split("-").pop()).get(0).setAttribute("draggable", "true"); else { this.id.split("-").pop(); l.find(".fr-file-" + this.id.split("-").pop()).get(0).setAttribute("draggable", "false") } }), k.events.$on(l, "click", ".fr-file-insert-button", function (e) { this.classList.contains("fr-disabled") || he(parseInt(this.id.split("-").pop())) }), k.events.$on(l, "click", ".fr-file-autoplay-button", function (e) { if (this.parentNode.classList.contains("fr-checkbox-disabled")) return this.disabled = !0, void (this.checked = !1); Me(parseInt(this.id.split("-").pop())) }), k.events.$on(l, "click", ".fr-file-edit-button", function (e) { var t = parseInt(this.id.split("-").pop()); l.find(".fr-file-edit-button-".concat(t)).hasClass("fr-disabled") || i(t) }), k.events.$on(l, "click", ".fr-file-view-button", function (e) { var t = parseInt(this.id.split("-").pop()); l.find(".fr-file-view-button-".concat(t)).hasClass("fr-disabled") || function u(e) { var t = k.popups.get("filesManager.insert"); if (0 < t.find(".fr-file-view-image-" + e).length) t.find(".fr-file-view-image-" + e)[0].remove(); else { for (var i = t.find(".fr-file-view"), n = 0; n < i.length; n++)i.get(n).remove(); var a = t.find(".fr-file-view-" + e); if (Ie(ve(D.get(e)))) { var r = '<div class="fr-file-view-modal">\n              <div class="fr-file-view-modal-content">\n              <div class="fr-file-view-close">&times;</div> \n                <img src="' + D.get(e).link + "\" class ='fr-file-view-image'/>\n                </div>\n              </div>"; a[0].innerHTML = r + a[0].innerHTML } else if (Ce(ve(D.get(e)))) { var o; if (D.get(e).hasOwnProperty("video")) { var s = D.get(e).video.substring(D.get(e).video.indexOf("src") + 3), l = s.substring(s.indexOf('"') + 1); l = l.substring(0, l.indexOf('"')), o = '<div class="fr-file-view-modal">\n        <div class="fr-file-view-modal-content ">\n          <div class="fr-file-view-close">&times;</div> \n          <iframe width="640" height="360" src="'.concat(l + "&autoplay=1", '" frameborder="0" class = "fr-file-view-image"></iframe>\n        </div>\n      </div>') } else o = '<div class="fr-file-view-modal">\n          <div class="fr-file-view-modal-content ">\n            <div class="fr-file-view-close">&times;</div> \n            <video controls src="' + D.get(e).link + "\"  class ='fr-file-view-image' autoplay></video>\n          </div>\n        </div>"; a[0].innerHTML = o + a[0].innerHTML } else if (Ae(ve(D.get(e)))) { var d = '<div class="fr-file-view-modal">\n        <div class="fr-file-view-modal-content ">\n          <div  class="fr-file-view-close">&times;</div> \n          <audio controls="controls"  class =\'fr-file-view-image\' autoplay>\n\n          <source src="'.concat(D.get(e).link, '" type="').concat(ve(D.get(e)), '" />\n\n            Your browser does not support the audio element.\n          </audio>\n        </div>\n      </div>'); a[0].innerHTML = d + a[0].innerHTML } else if (ke(ve(D.get(e)))) { var f = D.get(e).link, c = D.get(e).text; if (f.endsWith(".pdf") || f.endsWith(".txt")) { var p = '<div class="fr-file-view-modal">\t\n              <div class="fr-file-view-modal-content " >\t\n              <div class="fr-file-view-close">&times;</div> \t\n              <iframe src="'.concat(f, "\" style='background-color: white;' height='50%' width='50%' title=\"").concat(c, '" class="fr-file fr-file-view-image"></iframe>\t\n            </div>\t\n            </div>'); a[0].innerHTML = p + a[0].innerHTML } else if (0 === f.indexOf("blob:") && k.browser.msie && window.navigator && window.navigator.msSaveBlob) window.navigator.msSaveBlob(b.get(e), c); else { var g = document.createElement("a"); g.href = f, g.download = c, g.click() } } } }(t) }), k.events.$on(l, "click", ".fr-file-delete-button", function (e) { Z(parseInt(this.id.split("-").pop())) }), k.events.$on(l, "click", ".fr-file-cancel-upload-button", function (e) { !function i(e) { var t = k.popups.get("filesManager.insert"); t.find(".fr-file-item-right-" + e).get(0).innerHTML = le(e), u.get(e).abort(), fe(e, 100, !0), t.find(".fr-checkbox-file-" + e).get(0).disabled = !0 }(parseInt(this.id.split("-").pop())) }), k.events.$on(l, "click", ".fr-upload-delete-button", function (e) { !function t(e) { 0 != u.get(e).readyState && (u.get(e).abort(), fe(e, 100, !0), u["delete"](e)), Z(e) }(parseInt(this.id.split("-").pop())) }), k.events.$on(l, "click", ".fr-file-view-close", function (e) { l.find(".fr-file-view-modal").get(0).outerHTML = "" }), k.events.$on(l, "click", ".fr-plugins-enable", function (e) { !function t() { E.forEach(function (e) { k.opts.pluginsEnabled.indexOf(e) < 0 && k.opts.pluginsEnabled.push(e) }) }(), function i(e) { for (var t in e) if (!k[t]) { if (vt.PLUGINS[t] && k.opts.pluginsEnabled.indexOf(t) < 0) continue; k[t] = new e[t](k), k[t]._init && k[t]._init() } }(vt.PLUGINS), k.popups.get("filesManager.insert").get(0).outerHTML = "", _e(), F(!0) }), k.events.$on(l, "click", ".fr-plugins-cancel", function (e) { k.popups.hide("filesManager.insert") }), k.events.$on(l, "drop", ".fr-upload-progress", function (e) { e.preventDefault(), e.stopPropagation() }), k.events.$on(l, "drop", ".fr-files-upload-layer", function (e) { e.preventDefault(), e.stopPropagation(), _(this).removeClass("fr-drop"); var t = e.originalEvent.dataTransfer; if (t && t.files) { var i = l.data("instance") || k; i.events.disableBlur(); for (var n = [], a = 0; a < t.files.length; a++) { var r = x; b.set(r, t.files[a]), ae(r), S.set(r, !1), n.push(r), x++ } for (var o = 0; o < n.length; o++)i.filesManager.upload(b.get(n[o]), t.files, h, n[o]); i.events.enableBlur() } }, !0), k.helpers.isIOS() && k.events.$on(l, "touchstart", '.fr-files-upload-layer input[type="file"]', function () { _(this).trigger("click") }, !0), k.events.$on(l, "change", '.fr-files-upload-layer input[type="file"]', function () { if (this.files) { var e = l.data("instance") || k; e.events.disableBlur(), l.find("input:focus").blur(), e.events.enableBlur(); var t = []; if ("undefined" != typeof this.files && 0 < this.files.length) { for (var i = 0; i < this.files.length; i++) { var n = x; b.set(n, this.files[i]), ae(n), S.set(n, !1), ++x, t.push(n) } for (var a = 0; a < t.length; a++)e.filesManager.upload(b.get(t[a]), this.files, h, t[a]) } } _(this).val("") }, !0) } function Me(t) { document.getElementById("fr-file-autoplay-button-" + t).checked ? R.push(t) : R = R.filter(function (e) { return e != t }) } function Ie(e) { return e && "image" === e.split("/")[0] } function ke(e) { return e && "image" != e.split("/")[0] && e && "video" != e.split("/")[0] && e && "audio" != e.split("/")[0] } function Ce(e) { return e && "video" === e.split("/")[0] } function Ae(e) { return e && "audio" === e.split("/")[0] } function _e(e) { if (e) return k.popups.onRefresh("filesManager.insert", z), k.popups.onHide("filesManager.insert", N), !0; var t, i, n = ""; k.opts.imageUpload || -1 === k.opts.filesInsertButtons.indexOf("filesUpload") || k.opts.imageInsertButtons.splice(k.opts.filesInsertButtons.indexOf("filesUpload"), 1); var a = k.button.buildList(k.opts.filesInsertButtons), r = k.button.buildList(k.opts.filesInsertButtons2); "" !== a && (n = '<div class="fr-buttons fr-tabs">'.concat(a, '<span class="fr-align-right">').concat(r, "</span></div>")); var o = k.opts.filesInsertButtons.indexOf("filesUpload"), s = k.opts.filesInsertButtons.indexOf("filesByURL"), l = k.opts.filesInsertButtons.indexOf("filesEmbed"), d = ""; 0 <= o && (t = " fr-active", 0 <= s && s < o && (t = ""), d = '<div class="fr-files-upload-layer'.concat(t, ' fr-layer " id="fr-files-upload-layer-').concat(k.id, '"><div style="display:flex"><div class="fr-upload-section"><div class = \'fr-blue-decorator\'><div class = \'fr-cloud-icon\'><svg class = "fr-svg" focusable="false" width="26px" height="26px" viewBox = "0 0 24 24" xlmns = "http://w3.org/200/svg"><path d = \'M12 6.66667a4.87654 4.87654 0 0 1 4.77525 3.92342l0.29618 1.50268 1.52794 0.10578a2.57021 2.57021 0 0 1 -0.1827 5.13478H6.5a3.49774 3.49774 0 0 1 -0.3844 -6.97454l1.06682 -0.11341L7.678 9.29387A4.86024 4.86024 0 0 1 12 6.66667m0 -2A6.871 6.871 0 0 0 5.90417 8.37 5.49773 5.49773 0 0 0 6.5 19.33333H18.41667a4.57019 4.57019 0 0 0 0.32083 -9.13A6.86567 6.86567 0 0 0 12 4.66667Zm0.99976 7.2469h1.91406L11.99976 9 9.08618 11.91357h1.91358v3H11V16h2V14h-0.00024Z\'></path></svg></div>Drag & Drop One or More Files<br><div class="decorated"><span> OR </span></div> Click Browse Files </div> </div><div class="fr-form"><input type="file" accept="').concat(k.opts.filesManagerAllowedTypes.join(",").toLowerCase(), '" tabIndex="-1" aria - labelledby="fr-files-upload-layer-').concat(k.id, '"role="button" multiple></div> </div></div>')); var f = ""; 0 <= l && (t = " fr-active", (o < l && 0 <= o || s < l && 0 <= s) && (t = ""), f = '<div class="fr-files-embed-layer fr-layer'.concat(t, '" id="fr-files-embed-layer-').concat(k.id, '"><div class="fr-input-line padding-top-15"><textarea data-gramm_editor="false" style=\'height:60px\' id="fr-files-embed-layer-text').concat(k.id, '" type="text" placeholder="').concat(k.language.translate("Embedded Code"), '" tabIndex="1" aria-required="true" rows="5"></textarea></div><div class="fr-action-buttons"><button type="button" class="fr-command fr-submit" data-cmd="insertEmbed" tabIndex="2" role="button">').concat(k.language.translate("Insert"), "</button></div></div>")); var c = ""; 0 <= s && (t = " fr-active", 0 <= o && o < s && (t = ""), c = '<div class="fr-files-by-url-layer'.concat(t, ' fr-layer" id="fr-files-by-url-layer-').concat(k.id, '"><div class="fr-input-line fr-by-url-padding"><input id="fr-files-by-url-layer-text-').concat(k.id, '" type="text" placeholder="http://" tabIndex="1" aria-required="true"></div><div class="fr-action-buttons"><button type="button" class="fr-command fr-submit" data-cmd="filesInsertByURL" tabIndex="2" role="button">').concat(k.language.translate("Add"), "</button></div></div>")); var p = { buttons: n, upload_layer: d, by_url_layer: c, embed_layer: f, upload_progress_layer: "<div class = ' fr-margin-16 fr-upload-progress' id=\"fr-upload-progress-layer-".concat(k.id, "\" ><div  class='fr-progress-bar-style'><div class='fr-progress-bar fr-none'></div></div><div id='filesList' class = 'fr-upload-progress-layer fr-layer'></div></div>"), progress_bar: '<div class="fr-files-progress-bar-layer fr-layer"><h3 tabIndex="-1" class="fr-message">Uploading</h3><div class="fr-loader"><span class="fr-progress"></span></div><div class="fr-action-buttons"><button type="button" class="fr-command fr-dismiss" data-cmd="filesDismissError" tabIndex="2" role="button">OK</button></div></div>' }; return 1 <= k.opts.imageInsertButtons.length && (i = k.popups.create("filesManager.insert", p)), k.$wp && k.events.$on(k.$wp, "scroll", function () { h && k.popups.isVisible("filesManager.insert") && replace() }), Ee(i), k.popups.setPopupDimensions(i), i } function De(e) { var t = e.split("/").pop(); if (t.split(".").length < 2) { var i = new Date; return t + "-" + i.getDate() + "/" + (i.getMonth() + 1) + "/" + i.getFullYear() } return t } function Se() { h && k.popups.get("image.alt").find("input").val(h.attr("alt") || "").trigger("change") } function Re() { var e = k.popups.get("image.alt"); e || (e = Le()), ee(), k.popups.refresh("image.alt"), k.popups.setContainer("image.alt", k.$sc); var t = Ze(); Qe() && (t = t.find(".fr-img-wrap")); var i = t.offset().left + t.outerWidth() / 2, n = t.offset().top + t.outerHeight(); k.popups.show("image.alt", i, n, t.outerHeight(), !0) } function Le(e) { if (e) return k.popups.onRefresh("image.alt", Se), !0; var t = { buttons: '<div class="fr-buttons fr-tabs">'.concat(k.button.buildList(k.opts.imageAltButtons), "</div>"), alt_layer: '<div class="fr-image-alt-layer fr-layer fr-active" id="fr-image-alt-layer-'.concat(k.id, '"><div class="fr-input-line"><input id="fr-image-alt-layer-text-').concat(k.id, '" type="text" placeholder="').concat(k.language.translate("Alternative Text"), '" tabIndex="1"></div><div class="fr-action-buttons"><button type="button" class="fr-command fr-submit" data-cmd="imageSetAlt" tabIndex="2" role="button">').concat(k.language.translate("Update"), "</button></div></div>") }, i = k.popups.create("image.alt", t); return k.$wp && k.events.$on(k.$wp, "scroll.image-alt", function () { h && k.popups.isVisible("image.alt") && Re() }), i } function Be() { var e = k.popups.get("image.size"); if (h) if (Qe()) { var t = h.parent(); t.get(0).style.width || (t = h.parent().parent()), e.find('input[name="width"]').val(t.get(0).style.width).trigger("change"), e.find('input[name="height"]').val(t.get(0).style.height).trigger("change") } else e.find('input[name="width"]').val(h.get(0).style.width).trigger("change"), e.find('input[name="height"]').val(h.get(0).style.height).trigger("change") } function Oe() { var e = k.popups.get("image.size"); e || (e = Te()), ee(), k.popups.refresh("image.size"), k.popups.setContainer("image.size", k.$sc); var t = Ze(); Qe() && (t = t.find(".fr-img-wrap")); var i = t.offset().left + t.outerWidth() / 2, n = t.offset().top + t.outerHeight(); k.popups.show("image.size", i, n, t.outerHeight(), !0) } function Te(e) { if (e) return k.popups.onRefresh("image.size", Be), !0; var t = { buttons: '<div class="fr-buttons fr-tabs">'.concat(k.button.buildList(k.opts.imageSizeButtons), "</div>"), size_layer: '<div class="fr-image-size-layer fr-layer fr-active" id="fr-image-size-layer-'.concat(k.id, '"><div class="fr-image-group"><div class="fr-input-line"><input id="fr-image-size-layer-width-\'').concat(k.id, '" type="text" name="width" placeholder="').concat(k.language.translate("Width"), '" tabIndex="1"></div><div class="fr-input-line"><input id="fr-image-size-layer-height').concat(k.id, '" type="text" name="height" placeholder="').concat(k.language.translate("Height"), '" tabIndex="1"></div></div><div class="fr-action-buttons"><button type="button" class="fr-command fr-submit" data-cmd="imageSetSize" tabIndex="2" role="button">').concat(k.language.translate("Update"), "</button></div></div>") }, i = k.popups.create("image.size", t); return k.$wp && k.events.$on(k.$wp, "scroll.image-size", function () { h && k.popups.isVisible("image.size") && Oe() }), i } function Ue(e, t, i, n) { return e.pageX = t, Y.call(this, e), e.pageX = e.pageX + i * Math.floor(Math.pow(1.1, n)), V.call(this, e), G.call(this, e), ++n } function $e(e) { (e = e || Ze()) && !1 !== k.events.trigger("image.beforeRemove", [e]) && (k.popups.hideAll(), Ye(!0), k.undo.canDo() || k.undo.saveStep(), e.get(0) == k.el ? e.removeAttr("src") : (e.get(0).parentNode && "A" == e.get(0).parentNode.tagName ? (k.selection.setBefore(e.get(0).parentNode) || k.selection.setAfter(e.get(0).parentNode) || e.parent().after(vt.MARKERS), _(e.get(0).parentNode).remove()) : (k.selection.setBefore(e.get(0)) || k.selection.setAfter(e.get(0)) || e.after(vt.MARKERS), e.remove()), k.html.fillEmptyBlocks(), k.selection.restore()), k.undo.saveStep()) } function Pe(e) { var t = e.which; if (h && (t == vt.KEYCODE.BACKSPACE || t == vt.KEYCODE.DELETE)) return e.preventDefault(), e.stopPropagation(), $e(), !1; if (h && t == vt.KEYCODE.ESC) { var i = h; return Ye(!0), k.selection.setAfter(i.get(0)), k.selection.restore(), e.preventDefault(), !1 } if (!h || t != vt.KEYCODE.ARROW_LEFT && t != vt.KEYCODE.ARROW_RIGHT) return h && t === vt.KEYCODE.TAB ? (e.preventDefault(), e.stopPropagation(), Ye(!0), !1) : h && t != vt.KEYCODE.F10 && !k.keys.isBrowserAction(e) ? (e.preventDefault(), e.stopPropagation(), !1) : void 0; var n = h.get(0); return Ye(!0), t == vt.KEYCODE.ARROW_LEFT ? k.selection.setBefore(n) : k.selection.setAfter(n), k.selection.restore(), e.preventDefault(), !1 } function ze(e) { if (e && "IMG" == e.tagName) { if (k.node.hasClass(e, "fr-uploading") || k.node.hasClass(e, "fr-error") ? e.parentNode.removeChild(e) : k.node.hasClass(e, "fr-draggable") && e.classList.remove("fr-draggable"), e.parentNode && e.parentNode.parentNode && k.node.hasClass(e.parentNode.parentNode, "fr-img-caption")) { var t = e.parentNode.parentNode; t.removeAttribute("contenteditable"), t.removeAttribute("draggable"), t.classList.remove("fr-draggable"); var i = e.nextSibling; i && i.removeAttribute("contenteditable") } } else if (e && e.nodeType == Node.ELEMENT_NODE) for (var n = e.querySelectorAll("img.fr-uploading, img.fr-error, img.fr-draggable"), a = 0; a < n.length; a++)ze(n[a]) } function Fe(e) { if (!1 === k.events.trigger("image.beforePasteUpload", [e])) return !1; h = _(e), H(), replace(), J(), h.on("load", function () { var t = []; H(), _(k.popups.get("filesManager.insert").get(0)).find("div.fr-active.fr-error").length < 1 && J(), _(this).data("events").find(function (e) { "load" === e[0] && t.push(e) }), t.length <= 1 && _(this).off("load") }); for (var t = _(e).attr("src").split(","), i = atob(t[1]), n = [], a = 0; a < i.length; a++)n.push(i.charCodeAt(a)); xe([new Blob([new Uint8Array(n)], { type: t[0].replace(/data\:/g, "").replace(/;base64/g, "") })], h) } function Ne() { k.opts.imagePaste ? k.$el.find("img[data-fr-image-pasted]").each(function (e, n) { if (k.opts.imagePasteProcess) { var t = k.opts.imageDefaultWidth; t && "auto" != t && (t += k.opts.imageResizeWithPercent ? "%" : "px"), _(n).css("width", t).removeClass("fr-dii fr-dib fr-fir fr-fil"), je(_(n), k.opts.imageDefaultDisplay, k.opts.imageDefaultAlign) } if (0 === n.src.indexOf("data:")) Fe(n); else if (0 === n.src.indexOf("blob:") || 0 === n.src.indexOf("http") && k.opts.imageUploadRemoteUrls && k.opts.imageCORSProxy) { var i = new Image; i.crossOrigin = "Anonymous", i.onload = function () { var e, t = k.o_doc.createElement("CANVAS"), i = t.getContext("2d"); t.height = this.naturalHeight, t.width = this.naturalWidth, i.drawImage(this, 0, 0), setTimeout(function () { Fe(n) }, 0), e = 2e3 < this.naturalWidth || 1500 < this.naturalHeight ? "jpeg" : "png", n.src = t.toDataURL("image/".concat(e)) }, i.src = (0 === n.src.indexOf("blob:") ? "" : "".concat(k.opts.imageCORSProxy, "/")) + n.src } else 0 !== n.src.indexOf("http") || 0 === n.src.indexOf("https://mail.google.com/mail") ? (k.selection.save(), _(n).remove(), k.selection.restore()) : _(n).removeAttr("data-fr-image-pasted") }) : k.$el.find("img[data-fr-image-pasted]").remove() } function He(e) { var t = e.target.result, i = k.opts.imageDefaultWidth; i && "auto" != i && (i += k.opts.imageResizeWithPercent ? "%" : "px"), k.undo.saveStep(), k.html.insert('<img data-fr-image-pasted="true" src="'.concat(t, '"').concat(i ? ' style="width: '.concat(i, ';"') : "", ">")); var n = k.$el.find('img[data-fr-image-pasted="true"]'); n && je(n, k.opts.imageDefaultDisplay, k.opts.imageDefaultAlign), k.events.trigger("paste.after") } function Ke(e) { if (e && e.clipboardData && e.clipboardData.items) { var t = null; if (e.clipboardData.types && -1 != [].indexOf.call(e.clipboardData.types, "text/rtf") || e.clipboardData.getData("text/rtf")) t = e.clipboardData.items[0].getAsFile(); else for (var i = 0; i < e.clipboardData.items.length && !(t = e.clipboardData.items[i].getAsFile()); i++); if (t) return function n(e) { var t = new FileReader; t.onload = He, t.readAsDataURL(e) }(t), !1 } } function We(e) { return e = e.replace(/<img /gi, '<img data-fr-image-pasted="true" ') } function Ye(e) { h && (function t() { return Ve }() || !0 === e) && (k.toolbar.enable(), l && l.removeClass("fr-active"), k.popups.hide("image.edit"), h = null, Xe(), d = null, f && f.hide()) } P[L] = "File cannot be loaded from the passed link.", P[M] = "No link in upload response.", P[I] = "Error during file upload.", P[B] = "Parsing response failed.", P[O] = "File is too large.", P[T] = "File type is invalid.", P[7] = "Files can be uploaded only to same domain in IE 8 and IE 9.", P[8] = "File is corrupted.", P[9] = "Error during file loading."; var Ve = !(P[U] = "File upload cancelled"); function Ge() { Ve = !0 } function Xe() { Ve = !1 } function je(e, t, i) { !k.opts.htmlUntouched && k.opts.useClasses ? (e.removeClass("fr-fil fr-fir fr-dib fr-dii"), i && e.addClass("fr-fi".concat(i[0])), t && e.addClass("fr-di".concat(t[0]))) : "inline" == t ? (e.css({ display: "inline-block", verticalAlign: "bottom", margin: k.opts.imageDefaultMargin }), "center" == i ? e.css({ "float": "none", marginBottom: "", marginTop: "", maxWidth: "calc(100% - ".concat(2 * k.opts.imageDefaultMargin, "px)"), textAlign: "center" }) : "left" == i ? e.css({ "float": "left", marginLeft: 0, maxWidth: "calc(100% - ".concat(k.opts.imageDefaultMargin, "px)"), textAlign: "left" }) : e.css({ "float": "right", marginRight: 0, maxWidth: "calc(100% - ".concat(k.opts.imageDefaultMargin, "px)"), textAlign: "right" })) : "block" == t && (e.css({ display: "block", "float": "none", verticalAlign: "top", margin: "".concat(k.opts.imageDefaultMargin, "px auto"), textAlign: "center" }), "left" == i ? e.css({ marginLeft: 0, textAlign: "left" }) : "right" == i && e.css({ marginRight: 0, textAlign: "right" })) } function qe() { return h } function Ze() { return Qe() ? h.parents(".fr-img-caption").first() : h } function Qe() { return !!h && 0 < h.parents(".fr-img-caption").length } return { _init: function Je() { var n; (function e() { k.events.$on(k.$el, k._mousedown, "IMG" == k.el.tagName ? null : 'img:not([contenteditable="false"])', function (e) { if ("false" == _(this).parents("contenteditable").not(".fr-element").not(".fr-img-caption").not("body").first().attr("contenteditable")) return !0; k.helpers.isMobile() || k.selection.clear(), t = !0, k.popups.areVisible() && k.events.disableBlur(), k.browser.msie && (k.events.disableBlur(), k.$el.attr("contenteditable", !1)), k.draggable || "touchstart" == e.type || e.preventDefault(), e.stopPropagation() }), k.events.$on(k.$el, k._mousedown, ".fr-img-caption .fr-inner", function (e) { k.core.hasFocus() || k.events.focus(), e.stopPropagation() }), k.events.$on(k.$el, "paste", ".fr-img-caption .fr-inner", function (e) { k.toolbar.hide(), e.stopPropagation() }), k.events.$on(k.$el, k._mouseup, "IMG" == k.el.tagName ? null : 'img:not([contenteditable="false"])', function (e) { if ("false" == _(this).parents("contenteditable").not(".fr-element").not(".fr-img-caption").not("body").first().attr("contenteditable")) return !0; t && (t = !1, e.stopPropagation(), k.browser.msie && (k.$el.attr("contenteditable", !0), k.events.enableBlur())) }), k.events.on("keyup", function (e) { if (e.shiftKey && "" === k.selection.text().replace(/\n/g, "") && k.keys.isArrow(e.which)) { var t = k.selection.element(), i = k.selection.endElement(); t && "IMG" == t.tagName ? pe(_(t)) : i && "IMG" == i.tagName && pe(_(i)) } }, !0), k.events.on("window.mousedown", Ge), k.events.on("window.touchmove", Xe), k.events.on("mouseup window.mouseup", function () { if (h) return Ye(), !1; Xe() }), k.events.on("commands.mousedown", function (e) { 0 < e.parents(".fr-toolbar").length && Ye() }), k.events.on("image.resizeEnd", function () { k.opts.iframe && k.size.syncIframe() }), k.events.on("blur image.hideResizer commands.undo commands.redo element.dropped", function () { Ye(!(t = !1)) }), k.events.on("modals.hide", function () { h && k.selection.clear() }), k.events.on("image.resizeEnd", function () { k.win.getSelection && pe(h) }), k.opts.imageAddNewLine && k.events.on("image.inserted", function (e) { var t = e.get(0); for (t.nextSibling && "BR" === t.nextSibling.tagName && (t = t.nextSibling); t && !k.node.isElement(t);)t = k.node.isLastSibling(t) ? t.parentNode : null; k.node.isElement(t) && (k.opts.enter === vt.ENTER_BR ? e.after("<br>") : _(k.node.blockParent(e.get(0))).after("<".concat(k.html.defaultTag(), "><br></").concat(k.html.defaultTag(), ">"))) }) })(), "IMG" == k.el.tagName && k.$el.addClass("fr-view"), k.helpers.isMobile() && (k.events.$on(k.$el, "touchstart", "IMG" == k.el.tagName ? null : 'img:not([contenteditable="false"])', function () { r = !1 }), k.events.$on(k.$el, "touchmove", function () { r = !0 })), k.$wp ? (k.events.on("window.keydown keydown", Pe, !0), k.events.on("keyup", function (e) { if (h && e.which == vt.KEYCODE.ENTER) return !1 }, !0), k.events.$on(k.$el, "keydown", function () { var e = k.selection.element(); (e.nodeType === Node.TEXT_NODE || "BR" == e.tagName && k.node.isLastSibling(e)) && (e = e.parentNode), k.node.hasClass(e, "fr-inner") || (k.node.hasClass(e, "fr-img-caption") || (e = _(e).parents(".fr-img-caption").get(0)), k.node.hasClass(e, "fr-img-caption") && (_(e).after(vt.INVISIBLE_SPACE + vt.MARKERS), k.selection.restore())) })) : k.events.$on(k.$win, "keydown", Pe), k.events.on("toolbar.esc", function () { if (h) { if (k.$wp) k.events.disableBlur(), k.events.focus(); else { var e = h; Ye(!0), k.selection.setAfter(e.get(0)), k.selection.restore() } return !1 } }, !0), k.events.on("toolbar.focusEditor", function () { if (h) return !1 }, !0), k.events.on("window.cut window.copy", function (e) { if (h && k.popups.isVisible("image.edit") && !k.popups.get("image.edit").find(":focus").length) { var t = Ze(); Qe() ? (t.before(vt.START_MARKER), t.after(vt.END_MARKER), k.selection.restore(), k.paste.saveCopiedText(t.get(0).outerHTML, t.text())) : k.paste.saveCopiedText(h.get(0).outerHTML, h.attr("alt")), "copy" == e.type ? setTimeout(function () { pe(h) }) : (Ye(!0), k.undo.saveStep(), setTimeout(function () { k.undo.saveStep() }, 0)) } }, !0), k.browser.msie && k.events.on("keydown", function (e) { if (!k.selection.isCollapsed() || !h) return !0; var t = e.which; t == vt.KEYCODE.C && k.keys.ctrlKey(e) ? k.events.trigger("window.copy") : t == vt.KEYCODE.X && k.keys.ctrlKey(e) && k.events.trigger("window.cut") }), k.events.$on(_(k.o_win), "keydown", function (e) { var t = e.which; if (h && t == vt.KEYCODE.BACKSPACE) return e.preventDefault(), !1 }), k.events.$on(k.$win, "keydown", function (e) { var t = e.which; h && h.hasClass("fr-uploading") && t == vt.KEYCODE.ESC && h.trigger("abortUpload") }), k.events.on("destroy", function () { h && h.hasClass("fr-uploading") && h.trigger("abortUpload") }), k.events.on("paste.before", Ke), k.events.on("paste.beforeCleanup", We), k.events.on("paste.after", Ne), k.events.on("html.processGet", ze), k.opts.imageOutputSize && k.events.on("html.beforeGet", function () { n = k.el.querySelectorAll("img"); for (var e = 0; e < n.length; e++) { var t = n[e].style.width || _(n[e]).width(), i = n[e].style.height || _(n[e]).height(); t && n[e].setAttribute("width", "".concat(t).replace(/px/, "")), i && n[e].setAttribute("height", "".concat(i).replace(/px/, "")) } }), k.opts.iframe && k.events.on("image.loaded", k.size.syncIframe), k.events.$on(_(k.o_win), "orientationchange.image", function () { setTimeout(function () { h && pe(h) }, 100) }), function a(e) { if (e) return k.$wp && k.events.$on(k.$wp, "scroll.image-edit", function () { h && k.popups.isVisible("image.edit") && k.events.disableBlur() }), !0; var t = ""; if (0 < k.opts.imageEditButtons.length) { var i = { buttons: t += '<div class="fr-buttons"> \n        '.concat(k.button.buildList(k.opts.imageEditButtons), "\n        </div>") }; return k.popups.create("image.edit", i) } return !1 }(!0), _e(!0), Te(!0), Le(!0), k.events.on("node.remove", function (e) { if ("IMG" == e.get(0).tagName) return $e(e), !1 }), k.events.on("popups.hide.filesManager.insert", function (e) { k.filesManager.minimizePopup(C) }) }, showInsertPopup: F, showLayer: function et(e) { var t, i, n = k.popups.get("filesManager.insert"); if (h || k.opts.toolbarInline) { if (h) { var a = Ze(); Qe() && (a = a.find(".fr-img-wrap")), i = a.offset().top + a.outerHeight(), t = a.offset().left } } else { var r = k.$tb.find('.fr-command[data-cmd="insertFiles"]'); t = r.offset().left, i = r.offset().top + (k.opts.toolbarBottom ? 10 : r.outerHeight() - 10) } !h && k.opts.toolbarInline && (i = n.offset().top - k.helpers.getPX(n.css("margin-top")), n.hasClass("fr-above") && (i += n.outerHeight())), n.find(".fr-layer").removeClass("fr-active"), n.find(".fr-".concat(e, "-layer")).addClass("fr-active"), n.find(".fr-upload-progress-layer").addClass("fr-active"), k.popups.show("filesManager.insert", t, i, h ? h.outerHeight() : 0), k.accessibility.focusPopup(n) }, refreshUploadButton: function tt(e) { var t = k.popups.get("filesManager.insert"); t && t.find(".fr-files-upload-layer").hasClass("fr-active") && e.addClass("fr-active").attr("aria-pressed", !0) }, refreshByURLButton: function it(e) { var t = k.popups.get("filesManager.insert"); t && t.find(".fr-files-by-url-layer").hasClass("fr-active") && e.addClass("fr-active").attr("aria-pressed", !0) }, upload: xe, insertByURL: function nt() { for (var e, t = k.popups.get("filesManager.insert").find(".fr-files-by-url-layer input"), i = t.val().trim().split(/[ ,]+/), n = [], a = 0, r = 0; r < i.length; r++)e = i[r], new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$", "i").test(e) && (n[a] = i[r], a++); if (0 != n.length) { if (0 < t.val().trim().length && 0 < n.length) { var s = [], l = [], d = x, f = n.length; n.forEach(function (e, i) { if (0 == e.trim().length) x == d + --f && ce(s, l); else { ee(), J(), te(k.language.translate("Loading file(s)")); var n = e.trim(), t = function o(e) { if (void 0 === e) return e; var t = null; if (/^http/.test(e) || (e = "https://".concat(e)), k.helpers.isURL(e)) for (var i = 0; i < vt.VIDEO_PROVIDERS.length; i++) { var n = vt.VIDEO_PROVIDERS[i]; if (n.test_regex.test(e) && new RegExp(k.opts.videoAllowedProviders.join("|")).test(n.provider)) { t = e.replace(n.url_regex, n.url_text), t = n.html.replace(/\{url\}/, t); break } } return t }(n); if (t) { var a = { link: n, name: n, type: "video/url", size: 2, video: t }; b.set(d + i, a), ae(d + i), ee(), J(), te(k.language.translate("Loading file(s)")), D.set(d + i, a), ++x == d + f && ce(s, l) } else { var r = new XMLHttpRequest; r.onload = function () { if (200 == this.status) { var e = new Blob([this.response], { type: this.response.type || " " }); e.name = De(n), e.link = n, Ie(this.response.type) ? (e.sanitize = !0, e.existing_image = h) : ke(this.response.type) && (e.text = De(n)), s.push(e), l.push(d + i), b.set(d + i, e), ae(d + i) } else { var t = new Blob([this.response], { type: this.response.type || " " }); t.name = De(n), t.link = n, b.set(d + i, t), ae(d + i), j(L, this.response, h, d + i) } ee(), J(), te(k.language.translate("Loading file(s)")), ++x == d + f && ce(s, l) }, r.onerror = function () { var e = { link: n, name: De(n), size: 0, type: "" }; j(9, this.response, h, d + i); var t = x; b.set(t, e), ae(t), ee(), J(), te(k.language.translate("Loading file(s)")), ++x == d + f && ce(s, l) }, r.open("GET", "".concat(k.opts.imageCORSProxy, "/").concat(n), !0), r.responseType = "blob", r.send() } } }), t.val(""), t.blur() } } else ie(k.language.translate("Url entered is invalid. Please try again.")) }, insertAllFiles: function at() { a = []; var e = k.popups.get("filesManager.insert"); w = -1, s = null, e.find(".fr-insert-checkbox").toArray().forEach(function n(e, t, i) { e.children.target.checked && (a.push(parseInt(e.id.split("-").pop())), Ie(D.get(parseInt(e.id.split("-").pop())).type) && -1 == w && (w = t)) }), me(a), q() }, deleteAllFiles: function e() { k.popups.get("filesManager.insert").find(".fr-insert-checkbox").toArray().forEach(function a(e, t, i) { if (e.children.target.checked) { var n = parseInt(e.id.split("-").pop()); u.has(n) && u["delete"](n), Z(n) } }), q() }, get: qe, getEl: Ze, insert: he, showProgressBar: J, remove: $e, hideProgressBar: ee, applyStyle: function rt(e, t, i) { if (void 0 === t && (t = k.opts.imageStyles), void 0 === i && (i = k.opts.imageMultipleStyles), !h) return !1; var n = Ze(); if (!i) { var a = Object.keys(t); a.splice(a.indexOf(e), 1), n.removeClass(a.join(" ")) } "object" == ht(t[e]) ? (n.removeAttr("style"), n.css(t[e].style)) : n.toggleClass(e), pe(h) }, showAltPopup: Re, showSizePopup: Oe, setAlt: function ot(e) { if (h) { var t = k.popups.get("image.alt"); h.attr("alt", e || t.find("input").val() || ""), t.find("input:focus").blur(), pe(h) } }, setSize: function st(e, t) { if (h) { var i = k.popups.get("image.size"); e = e || i.find('input[name="width"]').val() || "", t = t || i.find('input[name="height"]').val() || ""; var n = /^[\d]+((px)|%)*$/g; h.removeAttr("width").removeAttr("height"), e.match(n) ? h.css("width", e) : h.css("width", ""), t.match(n) ? h.css("height", t) : h.css("height", ""), Qe() && (h.parents(".fr-img-caption").removeAttr("width").removeAttr("height"), e.match(n) ? h.parents(".fr-img-caption").css("width", e) : h.parents(".fr-img-caption").css("width", ""), t.match(n) ? h.parents(".fr-img-caption").css("height", t) : h.parents(".fr-img-caption").css("height", "")), i && i.find("input:focus").blur(), pe(h) } }, toggleCaption: function lt() { var e; if (h && !Qe()) { (e = h).parent().is("a") && (e = h.parent()); var t, i, n = h.parents("ul") && 0 < h.parents("ul").length ? h.parents("ul") : h.parents("ol") && 0 < h.parents("ol").length ? h.parents("ol") : []; if (0 < n.length) { var a = n.find("li").length, r = h.parents("li"), o = document.createElement("li"); a - 1 === r.index() && (n.append(o), o.innerHTML = "&nbsp;") } e.attr("style") && (i = -1 < (t = e.attr("style").split(":")).indexOf("width") ? t[t.indexOf("width") + 1].replace(";", "") : ""); var s = k.opts.imageResizeWithPercent ? (-1 < i.indexOf("px") ? null : i) || "100%" : h.width() + "px"; e.wrap('<div class="fr-img-space-wrap"><span ' + (k.browser.mozilla ? "" : 'contenteditable="false"') + 'class="fr-img-caption ' + h.attr("class") + '" style="' + (k.opts.useClasses ? "" : e.attr("style")) + '" draggable="false"></span><p class="fr-img-space-wrap2">&nbsp;</p></div>'), e.wrap('<span class="fr-img-wrap"></span>'), h.after('<span class="fr-inner"'.concat(k.browser.mozilla ? "" : ' contenteditable="true"', ">").concat(vt.START_MARKER).concat(k.language.translate("Image Caption")).concat(vt.END_MARKER, "</span>")), h.removeAttr("class").removeAttr("style").removeAttr("width"), h.parents(".fr-img-caption").css("width", s), Ye(!0), k.selection.restore() } else e = Ze(), h.insertAfter(e), h.attr("class", e.attr("class").replace("fr-img-caption", "")).attr("style", e.attr("style")), e.remove(), pe(h) }, refreshEmbedButton: function dt(e) { var t = k.popups.get("filesManager.insert"); t && t.find(".fr-files-embed-layer").hasClass("fr-active") && e.addClass("fr-active").attr("aria-pressed", !0) }, insertEmbed: function ft(e) { void 0 === e && (e = k.popups.get("filesManager.insert").find(".fr-files-embed-layer textarea").val() || ""), 0 === e.length || !vt.VIDEO_EMBED_REGEX.test(e) && !vt.IMAGE_EMBED_REGEX.test(e) ? (ie(k.language.translate("Something went wrong. Please try again.")), vt.VIDEO_EMBED_REGEX.test(e) && k.events.trigger("video.codeError", [e])) : be(e) }, hasCaption: Qe, exitEdit: Ye, edit: pe, cancelFileInsert: function ct() { this.file_manager_dialog_open = !1, u.forEach(function (e, t) { 4 != e.readyState && (e.abort(), Z(t)) }); var e = k.popups.get("filesManager.insert"); e.find(".fr-progress-bar").removeClass("fr-display-block").addClass("fr-none"), e.find('.fr-command[data-cmd="filesUpload"]').removeClass("fr-disabled"), e.find('.fr-command[data-cmd="filesByURL"]').removeClass("fr-disabled"), e.find('.fr-command[data-cmd="filesEmbed"]').removeClass("fr-disabled"), y = 0, u = new Map, m = new Map, Q(), k.popups.hide("filesManager.insert") }, minimizePopup: function pt(e) { this.file_manager_dialog_open = !1, k.popups.hide("filesManager.insert"), Q() }, editImage: i, saveImage: function gt(e) { var t = D.get(o); t.link = window.URL.createObjectURL(new Blob(e, { type: "image/png" })), D.set(o, t) }, _showErrorMessage: ie, _showFileErrorMessage: ne, getFileThumbnail: se, deleteFile: Z, checkAutoplay: Me, checkInsertAllState: q, _disableInsertCheckbox: X, _getFileType: ve, isChildWindowOpen: function ut() { return g }, setChildWindowState: function mt(e) { e !== undefined && (g = e) }, resetAllFilesCheckbox: Q } }, vt.DefineIcon("insertFiles", { NAME: "image", SVG_KEY: "fileManager" }), vt.RegisterShortcut(vt.KEYCODE.P, "insertFiles", null, "P"), vt.RegisterCommand("insertFiles", { title: "Insert Files", undo: !1, focus: !0, refreshAfterCallback: !1, popup: !0, callback: function () { this.popups.isVisible("filesManager.insert") ? (this.$el.find(".fr-marker").length && (this.events.disableBlur(), this.selection.restore()), this.popups.hide("filesManager.insert")) : this.filesManager.showInsertPopup() }, plugin: "filesManager" }), vt.DefineIcon("cloudIcon", { NAME: "cloudIcon", SVG_KEY: "uploadFiles" }), vt.DefineIcon("filesUpload", { NAME: "uploadFiles", SVG_KEY: "uploadFiles" }), vt.RegisterCommand("filesUpload", { title: "Upload Files", undo: !1, focus: !1, toggle: !0, callback: function () { this.filesManager.showLayer("files-upload") }, refresh: function (e) { this.filesManager.refreshUploadButton(e) } }), vt.DefineIcon("filesByURL", { NAME: "link", SVG_KEY: "insertLink" }), vt.RegisterCommand("filesByURL", { title: "By URL", undo: !1, focus: !1, toggle: !0, callback: function () { this.filesManager.showLayer("files-by-url") }, refresh: function (e) { this.filesManager.refreshByURLButton(e) } }), vt.DefineIcon("filesEmbed", { NAME: "code", SVG_KEY: "codeView" }), vt.RegisterCommand("filesEmbed", { title: "Embedded Code", undo: !1, focus: !1, toggle: !0, callback: function () { this.filesManager.showLayer("files-embed") }, refresh: function (e) { this.filesManager.refreshEmbedButton(e) } }), vt.DefineIcon("insertAll", { NAME: "insertAll", SVG_KEY: "fileInsert" }), vt.RegisterCommand("insertAll", { title: "Insert", undo: !1, focus: !1, toggle: !0, disabled: !0, callback: function () { this.filesManager.insertAllFiles() } }), vt.DefineIcon("deleteAll", { NAME: "remove", SVG_KEY: "remove" }), vt.RegisterCommand("deleteAll", { title: "Delete", undo: !1, focus: !1, toggle: !0, disabled: !0, callback: function () { this.filesManager.deleteAllFiles() } }), vt.DefineIcon("cancel", { NAME: "cancel", SVG_KEY: "cancel" }), vt.RegisterCommand("cancel", { title: "Cancel", undo: !1, focus: !1, toggle: !0, callback: function () { this.filesManager.cancelFileInsert() }, refresh: function (e) { } }), vt.DefineIcon("minimize", { NAME: "minimize", SVG_KEY: "minimize" }), vt.RegisterCommand("minimize", { title: "Minimize", undo: !1, focus: !1, toggle: !0, callback: function () { this.filesManager.minimizePopup("image.insert", !0) }, refresh: function (e) { this.filesManager.refreshEmbedButton(e) } }), vt.RegisterCommand("filesInsertByURL", { title: "Insert Image", undo: !0, refreshAfterCallback: !1, callback: function () { this.filesManager.insertByURL() }, refresh: function (e) { e.text(this.language.translate("Add")) } }), vt.RegisterCommand("imageInsertByUpload", { title: "Insert", undo: !0, refreshAfterCallback: !1, callback: function (e, t) { }, refresh: function (e) { } }), vt.RegisterCommand("viewImage", { title: "View Image", undo: !0, refreshAfterCallback: !1, callback: function (e, t) { }, refresh: function (e) { } }), vt.RegisterCommand("insertEmbed", { undo: !0, focus: !0, callback: function () { this.filesManager.insertEmbed(), this.popups.get("filesManager.insert").find("textarea")[0].value = "", this.popups.get("filesManager.insert").find("textarea").removeClass("fr-not-empty") } }), vt.RegisterCommand("filesDismissError", { title: "OK", undo: !1, callback: function () { this.filesManager.hideProgressBar(!0) } }) });